{"version":3,"file":"vendors-node_modules_color-convert_index_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/color-convert/conversions.js","node_modules/color-convert/index.js","node_modules/color-convert/node_modules/color-name/index.js","node_modules/color-convert/route.js"],"sourcesContent":["/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n"],"names":["cssKeywords","reverseKeywords","key","Object","keys","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","gray","model","module","exports","length","defineProperty","value","comparativeDistance","x","y","h","r","g","b","min","Math","max","delta","l","s","rdif","gdif","bdif","v","diff","diffc","c","w","k","m","currentClosestKeyword","reversed","currentClosestDistance","Infinity","distance","z","a","t2","t3","val","t1","i","smin","lmin","sv","f","floor","p","q","t","sl","vmin","wh","bl","ratio","n","y2","x2","z2","hr","atan2","PI","sqrt","cos","sin","args","saturation","round","ansi","color","mult","rem","integer","string","toString","toUpperCase","substring","match","colorString","split","map","char","join","parseInt","chroma","hue","grayscale","pure","hi","mg","conversions","route","models","wrapRaw","fn","wrappedFn","arg0","conversion","wrapRounded","result","len","forEach","fromModel","routes","routeModels","toModel","raw","buildGraph","graph","parent","deriveBFS","queue","current","pop","adjacents","adjacent","node","unshift","link","from","to","wrapConversion","path","cur"],"sourceRoot":""}