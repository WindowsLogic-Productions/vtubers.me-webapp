{"version":3,"file":"chunk-ui_packages_webauthn-get-element_webauthn-get-element_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/form-utils/form-utils.ts","ui/packages/form-utils/remote-submit.ts","ui/packages/webauthn-get-element/webauthn-get-element.ts","node_modules/@github/webauthn-json/dist/esm/webauthn-json.browser-ponyfill.js"],"sourcesContent":["import {persistSubmitButtonValue} from './remote-submit'\n\ntype TextField = HTMLInputElement | HTMLTextAreaElement\ntype Button = HTMLInputElement | HTMLButtonElement\n\nfunction fire(target: HTMLElement, name: string, cancelable: boolean): boolean {\n  return target.dispatchEvent(\n    new CustomEvent(name, {\n      bubbles: true,\n      cancelable,\n    }),\n  )\n}\n\n// Submit a form while ensuring that `submit` event is also triggered.\n//\n// Calling native `form.submit()` method immediately submits the form without triggering the `submit` event.\n// As a result, code that wants to hook into form submits would never execute.\n//\n// This method first triggers the `submit` event and, if that event wasn't `preventDefault`d, submits the\n// form natively.\nexport function requestSubmit(form: HTMLFormElement, submitter?: Button) {\n  if (submitter) {\n    checkButtonValidity(form, submitter)\n    persistSubmitButtonValue(submitter)\n  }\n  if (fire(form, 'submit', true)) {\n    form.submit()\n  }\n}\n\n// Check submitter validity for form.requestSubmit compatibility.\n// See https://html.spec.whatwg.org/#dom-form-requestsubmit.\nfunction checkButtonValidity(form: HTMLFormElement, submitter: Button) {\n  if (!(form instanceof HTMLFormElement)) throw new TypeError('The specified element is not of type HTMLFormElement.')\n  if (!(submitter instanceof HTMLElement)) throw new TypeError('The specified element is not of type HTMLElement.')\n  if (submitter.type !== 'submit') throw new TypeError('The specified element is not a submit button.')\n  if (!form || form !== submitter.form) throw new Error('The specified element is not owned by the form element.')\n}\n\n// Set a form field value while ensuring that `change` event is also triggered.\n//\n// Having the `change` event fire is important for various behaviors to react, such as form validation.\nexport function changeValue(input: TextField, value: string | boolean) {\n  if (typeof value === 'boolean') {\n    if (input instanceof HTMLInputElement) {\n      input.checked = value\n    } else {\n      throw new TypeError('only checkboxes can be set to boolean value')\n    }\n  } else {\n    if (input.type === 'checkbox') {\n      throw new TypeError(\"checkbox can't be set to string value\")\n    } else {\n      input.value = value\n    }\n  }\n  fire(input, 'change', false)\n}\n\n// Fill multiple form fields by item name.\nexport function fillFormValues(form: HTMLFormElement, fields: {[key: string]: string}) {\n  for (const name in fields) {\n    const value = fields[name]\n    const element = form.elements.namedItem(name)\n\n    if (element instanceof HTMLInputElement) {\n      element.value = value!\n    } else if (element instanceof HTMLTextAreaElement) {\n      element.value = value!\n    }\n  }\n}\n\n// Test if element is a form field.\nexport function isFormField(element: Node): boolean {\n  if (!(element instanceof HTMLElement)) {\n    return false\n  }\n\n  const name = element.nodeName.toLowerCase()\n  const type = (element.getAttribute('type') || '').toLowerCase()\n  return (\n    name === 'select' ||\n    name === 'textarea' ||\n    (name === 'input' && type !== 'submit' && type !== 'reset') ||\n    element.isContentEditable\n  )\n}\n\nfunction searchParamsFromFormData(formData: FormData): URLSearchParams {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new URLSearchParams(formData as any)\n}\n\n// Get a `?` search string for a URL for a GET form, using its `action` attribute as well as its other fields.\nexport function combineGetFormSearchParams(formAction: URL, formData: FormData): string {\n  const allSearchParams = new URLSearchParams(formAction.search)\n  const searchParamsFromInputs = searchParamsFromFormData(formData)\n  for (const [key, value] of searchParamsFromInputs) {\n    allSearchParams.append(key, value)\n  }\n  return allSearchParams.toString()\n}\n\n// Serialize form data into string.\nexport function serialize(form: HTMLFormElement): string {\n  return searchParamsFromFormData(new FormData(form)).toString()\n}\n","// Emulates submit button submission values by inserting a hidden input to the form.\n//\n// Submit events can be triggerd in the following ways:\n// - User clicks on a submit button.\n// - User press Enter when focusing on a form field; also known as \"implicit submission\".\n// - Programmatically via requestSubmit helper.\n//\n// On GitHub.com, the submission is either handled by the browser or remoteForm.\n//\n// For submissions triggered by user actions, the name and value of the clicked submit button (also known as\n// \"the submitter\") is passed along in the request, and can be programmatically retrieved with FormData.entries().\n//\n// However, this value will be lost in the following cases:\n// - 1. When the submitter button is disabled, most commonly by [data-disable-with].\n// - 2. When submitting via requestSubmit (from form.js), because the submission does not originated from a submitter.\n// - 3. When submitting with remoteForm, because FormData(form).entries() does not know about the submitter. In Safari\n// the submitter is known during the submission steps, but this behavior is not supported in any other browsers.\n//\n// @see {@link https://github.com/github/form-data-entries/pull/7}.\n//\n// For the exact workarounds, refer to ./form.js and ./remote.js.\nexport function persistSubmitButtonValue(button: HTMLButtonElement | HTMLInputElement) {\n  const form = button.closest('form')\n  if (!(form instanceof HTMLFormElement)) {\n    return\n  }\n\n  let input = findPersistedSubmitButtonValue(form)\n\n  if (button.name) {\n    const defaultValue = button.matches('input[type=submit]') ? 'Submit' : ''\n    const value = button.value || defaultValue\n    if (!input) {\n      input = document.createElement('input')\n      input.type = 'hidden'\n      input.classList.add('js-submit-button-value')\n      form.prepend(input)\n    }\n    input.name = button.name\n    input.value = value\n  } else if (input) {\n    input.remove()\n  }\n}\n\nexport function findPersistedSubmitButtonValue(form: HTMLFormElement): HTMLInputElement | null {\n  const input = form.querySelector('input.js-submit-button-value')\n  return input instanceof HTMLInputElement ? input : null\n}\n","import {attr, controller, target, targets} from '@github/catalyst'\nimport {get, parseRequestOptionsFromJSON, supported} from '@github/webauthn-json/browser-ponyfill'\nimport type {CredentialRequestOptionsJSON} from '@github/webauthn-json/browser-ponyfill'\nimport {requestSubmit} from '@github-ui/form-utils'\n\nexport enum State {\n  Initializing = 'initializing',\n  Unsupported = 'unsupported',\n  Ready = 'ready',\n  Waiting = 'waiting',\n  Error = 'error',\n  Submitting = 'submitting',\n}\n\n@controller\nexport class WebauthnGetElement extends HTMLElement {\n  state: State = State.Initializing\n  @target button: HTMLButtonElement\n  @target buttonText: HTMLElement\n  // `messages` contains all the message elements.\n  @targets messages: HTMLElement[]\n  @target capitalizedDescription: HTMLElement\n  @target unsupportedMessage: HTMLElement\n  @target waitingMessage: HTMLElement\n  @target errorMessage: HTMLElement\n  @target errorText: HTMLElement\n\n  static attrPrefix = ''\n  @attr dataJson = ''\n  private originalButtonText: string\n  private hasErrored = false\n  private originalErrorText: string | null\n\n  connectedCallback(): void {\n    this.originalButtonText = this.getCurrentButtonText()\n    this.originalErrorText = this.errorText.textContent\n    this.setState(supported() ? State.Ready : State.Unsupported)\n  }\n\n  getCurrentButtonText(): string {\n    return this.buttonText.textContent || ''\n  }\n\n  setCurrentButtonText(text: string): void {\n    this.buttonText.textContent = text\n  }\n\n  setState(state: State): void {\n    // Reset to defaults\n    const retryMessage = this.button.getAttribute('data-retry-message') || this.originalButtonText\n    const buttonText = this.hasErrored ? retryMessage : this.originalButtonText\n    this.setCurrentButtonText(buttonText)\n    this.button.disabled = false\n    this.button.hidden = false\n    this.errorText.textContent = ''\n    for (const elem of this.messages) {\n      elem.hidden = true\n    }\n\n    switch (state) {\n      case State.Initializing:\n        this.button.disabled = true\n        break\n      case State.Unsupported:\n        this.button.disabled = true\n        this.unsupportedMessage.hidden = false\n        break\n      case State.Ready:\n        break\n      case State.Waiting:\n        this.waitingMessage.hidden = false\n        this.button.hidden = true\n        break\n      case State.Error:\n        this.errorMessage.hidden = false\n        this.errorText.textContent = this.originalErrorText\n        break\n      case State.Submitting:\n        this.setCurrentButtonText('Verifying…')\n        this.button.disabled = true\n        break\n      default:\n        throw new Error('invalid state')\n    }\n\n    this.state = state\n  }\n\n  // silent_unless_success: don't show waiting or error status. This is for automatically attempting a prompt at\n  // page/modal load time, without showing confusing UI if the browser rejects the attempt due to a missing user\n  // gesture. Most browsers allow at least one such prompt per page load, but we can't rely on it. In theory we could\n  // try to show an error to the user depending on the `get` rejection, but the spec is still in flux and browsers\n  // constantly change their mind (and have bugs). So we err on the side of not showing an error.\n  async prompt(event?: Event, silent_unless_success?: boolean): Promise<void> {\n    event?.preventDefault() // prevent default page form submission\n    this.dispatchEvent(new CustomEvent('webauthn-get-prompt'))\n    try {\n      if (!silent_unless_success) {\n        this.setState(State.Waiting)\n      }\n\n      const json: CredentialRequestOptionsJSON = JSON.parse(this.dataJson)\n      const signResponse = await get(parseRequestOptionsFromJSON(json))\n      this.setState(State.Submitting)\n\n      // Each `<webauthn-get>` element is currently embedded in a form (not\n      // the other way around), so we have to query for for the form outside of it.\n      const form = this.closest<HTMLFormElement>('.js-webauthn-form')!\n      const responseField = form.querySelector<HTMLInputElement>('.js-webauthn-response')!\n      responseField.value = JSON.stringify(signResponse)\n      requestSubmit(form)\n    } catch (error) {\n      if (!silent_unless_success) {\n        this.hasErrored = true\n        this.setState(State.Error)\n        throw error\n      }\n    }\n  }\n}\n","// src/webauthn-json/base64url.ts\nfunction base64urlToBuffer(baseurl64String) {\n  const padding = \"==\".slice(0, (4 - baseurl64String.length % 4) % 4);\n  const base64String = baseurl64String.replace(/-/g, \"+\").replace(/_/g, \"/\") + padding;\n  const str = atob(base64String);\n  const buffer = new ArrayBuffer(str.length);\n  const byteView = new Uint8Array(buffer);\n  for (let i = 0; i < str.length; i++) {\n    byteView[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\nfunction bufferToBase64url(buffer) {\n  const byteView = new Uint8Array(buffer);\n  let str = \"\";\n  for (const charCode of byteView) {\n    str += String.fromCharCode(charCode);\n  }\n  const base64String = btoa(str);\n  const base64urlString = base64String.replace(/\\+/g, \"-\").replace(\n    /\\//g,\n    \"_\"\n  ).replace(/=/g, \"\");\n  return base64urlString;\n}\n\n// src/webauthn-json/convert.ts\nvar copyValue = \"copy\";\nvar convertValue = \"convert\";\nfunction convert(conversionFn, schema, input) {\n  if (schema === copyValue) {\n    return input;\n  }\n  if (schema === convertValue) {\n    return conversionFn(input);\n  }\n  if (schema instanceof Array) {\n    return input.map((v) => convert(conversionFn, schema[0], v));\n  }\n  if (schema instanceof Object) {\n    const output = {};\n    for (const [key, schemaField] of Object.entries(schema)) {\n      if (schemaField.derive) {\n        const v = schemaField.derive(input);\n        if (v !== void 0) {\n          input[key] = v;\n        }\n      }\n      if (!(key in input)) {\n        if (schemaField.required) {\n          throw new Error(`Missing key: ${key}`);\n        }\n        continue;\n      }\n      if (input[key] == null) {\n        output[key] = null;\n        continue;\n      }\n      output[key] = convert(\n        conversionFn,\n        schemaField.schema,\n        input[key]\n      );\n    }\n    return output;\n  }\n}\nfunction derived(schema, derive) {\n  return {\n    required: true,\n    schema,\n    derive\n  };\n}\nfunction required(schema) {\n  return {\n    required: true,\n    schema\n  };\n}\nfunction optional(schema) {\n  return {\n    required: false,\n    schema\n  };\n}\n\n// src/webauthn-json/basic/schema.ts\nvar publicKeyCredentialDescriptorSchema = {\n  type: required(copyValue),\n  id: required(convertValue),\n  transports: optional(copyValue)\n};\nvar simplifiedExtensionsSchema = {\n  appid: optional(copyValue),\n  appidExclude: optional(copyValue),\n  credProps: optional(copyValue)\n};\nvar simplifiedClientExtensionResultsSchema = {\n  appid: optional(copyValue),\n  appidExclude: optional(copyValue),\n  credProps: optional(copyValue)\n};\nvar credentialCreationOptions = {\n  publicKey: required({\n    rp: required(copyValue),\n    user: required({\n      id: required(convertValue),\n      name: required(copyValue),\n      displayName: required(copyValue)\n    }),\n    challenge: required(convertValue),\n    pubKeyCredParams: required(copyValue),\n    timeout: optional(copyValue),\n    excludeCredentials: optional([publicKeyCredentialDescriptorSchema]),\n    authenticatorSelection: optional(copyValue),\n    attestation: optional(copyValue),\n    extensions: optional(simplifiedExtensionsSchema)\n  }),\n  signal: optional(copyValue)\n};\nvar publicKeyCredentialWithAttestation = {\n  type: required(copyValue),\n  id: required(copyValue),\n  rawId: required(convertValue),\n  authenticatorAttachment: optional(copyValue),\n  response: required({\n    clientDataJSON: required(convertValue),\n    attestationObject: required(convertValue),\n    transports: derived(\n      copyValue,\n      (response) => {\n        var _a;\n        return ((_a = response.getTransports) == null ? void 0 : _a.call(response)) || [];\n      }\n    )\n  }),\n  clientExtensionResults: derived(\n    simplifiedClientExtensionResultsSchema,\n    (pkc) => pkc.getClientExtensionResults()\n  )\n};\nvar credentialRequestOptions = {\n  mediation: optional(copyValue),\n  publicKey: required({\n    challenge: required(convertValue),\n    timeout: optional(copyValue),\n    rpId: optional(copyValue),\n    allowCredentials: optional([publicKeyCredentialDescriptorSchema]),\n    userVerification: optional(copyValue),\n    extensions: optional(simplifiedExtensionsSchema)\n  }),\n  signal: optional(copyValue)\n};\nvar publicKeyCredentialWithAssertion = {\n  type: required(copyValue),\n  id: required(copyValue),\n  rawId: required(convertValue),\n  authenticatorAttachment: optional(copyValue),\n  response: required({\n    clientDataJSON: required(convertValue),\n    authenticatorData: required(convertValue),\n    signature: required(convertValue),\n    userHandle: required(convertValue)\n  }),\n  clientExtensionResults: derived(\n    simplifiedClientExtensionResultsSchema,\n    (pkc) => pkc.getClientExtensionResults()\n  )\n};\n\n// src/webauthn-json/basic/api.ts\nfunction createRequestFromJSON(requestJSON) {\n  return convert(base64urlToBuffer, credentialCreationOptions, requestJSON);\n}\nfunction createResponseToJSON(credential) {\n  return convert(\n    bufferToBase64url,\n    publicKeyCredentialWithAttestation,\n    credential\n  );\n}\nfunction getRequestFromJSON(requestJSON) {\n  return convert(base64urlToBuffer, credentialRequestOptions, requestJSON);\n}\nfunction getResponseToJSON(credential) {\n  return convert(\n    bufferToBase64url,\n    publicKeyCredentialWithAssertion,\n    credential\n  );\n}\n\n// src/webauthn-json/basic/supported.ts\nfunction supported() {\n  return !!(navigator.credentials && navigator.credentials.create && navigator.credentials.get && window.PublicKeyCredential);\n}\n\n// src/webauthn-json/browser-ponyfill.ts\nasync function create(options) {\n  const response = await navigator.credentials.create(\n    options\n  );\n  response.toJSON = () => createResponseToJSON(response);\n  return response;\n}\nasync function get(options) {\n  const response = await navigator.credentials.get(\n    options\n  );\n  response.toJSON = () => getResponseToJSON(response);\n  return response;\n}\nexport {\n  create,\n  get,\n  createRequestFromJSON as parseCreationOptionsFromJSON,\n  getRequestFromJSON as parseRequestOptionsFromJSON,\n  supported\n};\n//# sourceMappingURL=webauthn-json.browser-ponyfill.js.map\n"],"names":["fire","target","name","cancelable","dispatchEvent","CustomEvent","bubbles","requestSubmit","form","submitter","checkButtonValidity","persistSubmitButtonValue","submit","HTMLFormElement","HTMLElement","type","changeValue","input","value","HTMLInputElement","checked","fillFormValues","fields","element","elements","namedItem","HTMLTextAreaElement","isFormField","nodeName","toLowerCase","getAttribute","isContentEditable","searchParamsFromFormData","formData","URLSearchParams","combineGetFormSearchParams","formAction","allSearchParams","search","searchParamsFromInputs","key","append","toString","serialize","FormData","button","closest","findPersistedSubmitButtonValue","defaultValue","matches","document","createElement","classList","add","prepend","remove","querySelector","State","Initializing","Unsupported","Ready","Waiting","Error","Submitting","WebauthnGetElement","connectedCallback","originalButtonText","getCurrentButtonText","originalErrorText","errorText","textContent","setState","supported","buttonText","setCurrentButtonText","text","state","retryMessage","hasErrored","elem","disabled","hidden","messages","unsupportedMessage","waitingMessage","errorMessage","prompt","event","silent_unless_success","preventDefault","json","JSON","parse","dataJson","signResponse","get","parseRequestOptionsFromJSON","responseField","stringify","error","attrPrefix","targets","attr","controller","base64urlToBuffer","baseurl64String","padding","slice","length","base64String","replace","str","atob","buffer","ArrayBuffer","byteView","Uint8Array","i","charCodeAt","bufferToBase64url","charCode","String","fromCharCode","btoa","base64urlString","copyValue","convertValue","convert","conversionFn","schema","Array","map","v","Object","output","schemaField","entries","derive","required","derived","optional","publicKeyCredentialDescriptorSchema","id","transports","simplifiedExtensionsSchema","appid","appidExclude","credProps","simplifiedClientExtensionResultsSchema","credentialCreationOptions","publicKey","rp","user","displayName","challenge","pubKeyCredParams","timeout","excludeCredentials","authenticatorSelection","attestation","extensions","signal","publicKeyCredentialWithAttestation","rawId","authenticatorAttachment","response","clientDataJSON","attestationObject","_a","getTransports","call","clientExtensionResults","pkc","getClientExtensionResults","credentialRequestOptions","mediation","rpId","allowCredentials","userVerification","publicKeyCredentialWithAssertion","authenticatorData","signature","userHandle","createRequestFromJSON","requestJSON","createResponseToJSON","credential","getRequestFromJSON","getResponseToJSON","navigator","credentials","create","window","PublicKeyCredential","options","toJSON"],"sourceRoot":""}