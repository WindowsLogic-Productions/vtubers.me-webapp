{"version":3,"file":"app_assets_modules_github_behaviors_keyboard-shortcuts-helper_ts-app_assets_modules_github_be-f5afdb-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/behaviors/keyboard-shortcuts-helper.ts","app/assets/modules/github/behaviors/task-list.ts","app/assets/modules/github/details-dialog.ts","ui/packages/html-safe-nonce/html-safe-nonce.ts","ui/packages/trusted-types-policies/server-x-safe-html.ts","app/assets/modules/github/fetch.ts","app/assets/modules/github/onfocus.ts","app/assets/modules/github/sso.ts","ui/packages/subscription/subscription.ts"],"sourcesContent":["import {eventToHotkeyString} from '@github/hotkey'\n\n// Returns false if a user has explicitly disabled character key shortcuts.\nexport const areCharacterKeyShortcutsEnabled = () => {\n  const keyboardShortcutsPreference = document.querySelector<HTMLMetaElement>(\n    'meta[name=keyboard-shortcuts-preference]',\n  )\n  if (keyboardShortcutsPreference) {\n    return keyboardShortcutsPreference.content === 'all'\n  }\n  return true\n}\n\n// Character-key shortcuts are implemented only with lowercase characters (\"g\", \"g f\"), uppercase characters (\"Shift+a\", \"A\"),\n// symbols (\"Alt+g\"), and punctuation (\"?\", \"!\", \"/\").\n//\n// Returns true if string is NOT what we define as a character key shortcut.\nexport const isNonCharacterKeyShortcut = (hotkey: string) => {\n  return /Enter|Arrow|Escape|Meta|Control|Esc/.test(hotkey) || (hotkey.includes('Alt') && hotkey.includes('Shift'))\n}\n\n// Returns false if a user settings has character key shortcut disabled and keyboard event corresponds to a character key shortcut.\nexport const isShortcutAllowed = (event: KeyboardEvent) => {\n  const hotkey = eventToHotkeyString(event)\n  if (areCharacterKeyShortcutsEnabled()) {\n    return true\n  }\n  return isNonCharacterKeyShortcut(hotkey)\n}\n","// ### Example Markup\n//\n//   <div class=\"js-task-list-container\">\n//     <task-lists disabled sortable>\n//       <div class=\"js-comment-body\">\n//         <ul class=\"contains-task-list\">\n//           <li class=\"task-list-item\">\n//             <input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled>\n//             text\n//           </li>\n//         </ul>\n//       </div>\n//     </task-lists>\n//     <form class=\"js-comment-update\">\n//       <textarea class=\"js-task-list-field\">- [ ] text</textarea>\n//     </form>\n//   </div>\n//\n// ### Specification\n//\n// TaskLists MUST be contained in a `(div).js-task-list-container`.\n//\n// TaskList Items SHOULD be an a list (`UL`/`OL`) element.\n//\n// Task list items MUST match `(input).task-list-item-checkbox` and MUST be\n// `disabled` by default.\n//\n// TaskLists MUST have a `(textarea).js-task-list-field` form element whose\n// `value` attribute is the source (Markdown) to be updated. The source MUST\n// follow the syntax guidelines.\n//\n// ### NOTE\n//\n// Task list checkboxes are rendered as disabled by default because rendered\n// user content is cached without regard for the viewer.\n\nimport {compose, fromEvent} from '@github-ui/subscription'\n// eslint-disable-next-line no-restricted-imports\nimport {fire, on} from 'delegated-events'\n\nimport TaskListsElement from '@github/task-lists-element'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\nimport {remoteForm} from '@github/remote-form'\nimport {requestSubmit} from '@github-ui/form-utils'\n\ntype Position = [number, number]\n\ninterface CheckPayload {\n  operation: 'check'\n  position: Position\n  checked: boolean\n}\n\ninterface ConvertPayload {\n  operation: 'convert_to_block'\n  position: number\n}\n\ninterface MovePayload {\n  operation: 'move'\n  src: Position\n  dst: Position\n}\n\n// Enable task lists with persistence fields. Otherwise, the viewer lacks\n// permission to update the comment so task lists remain disabled.\nobserve('.js-task-list-container .js-task-list-field', function (el) {\n  const container = el.closest<HTMLElement>('.js-task-list-container')!\n  enableTaskList(container)\n  updateProgress(container)\n})\n\n// Add the task list conversion button to the container\nobserve('.js-convert-tasklist-to-block-enabled .contains-task-list', function (el) {\n  const parentContainer = findTopLevelTasklistContainer(el)\n  if (!parentContainer) return\n  const alreadyContainsButton = Array.from(parentContainer.children).some(child =>\n    child.classList.contains('task-list-item-convert-container'),\n  )\n  if (alreadyContainsButton) return\n  const template = el.ownerDocument.querySelector<HTMLTemplateElement>('.js-convert-to-block-template')\n  const clonedNode = template?.content.cloneNode(true)\n  if (!clonedNode) return\n  parentContainer.appendChild(clonedNode)\n})\n\non('task-lists-move', 'task-lists', function (event) {\n  const {src, dst} = event.detail\n  const container = event.currentTarget.closest<HTMLElement>('.js-task-list-container')!\n  saveTaskList(container, 'reordered', {operation: 'move', src, dst})\n})\n\non('task-lists-check', 'task-lists', function (event) {\n  const {position, checked} = event.detail\n  const container = event.currentTarget.closest<HTMLElement>('.js-task-list-container')!\n  saveTaskList(container, `checked:${checked ? 1 : 0}`, {operation: 'check', position, checked})\n})\n\non('click', '.js-convert-to-block-button', function (event) {\n  const parentContainer = findTopLevelTasklistContainer(event.target! as Element)\n  if (!parentContainer) return\n  const taskListContainer = parentContainer.closest('task-lists')\n  if (!taskListContainer) throw new Error('parent not found')\n  const position = listIndex(parentContainer)\n  const container = event.currentTarget.closest<HTMLElement>('.js-task-list-container')!\n  saveTaskList(container, `converted`, {operation: 'convert_to_block', position})\n})\n\nexport function enableTaskList(container: Element) {\n  if (container.querySelector('.js-task-list-field')) {\n    const taskLists = container.querySelectorAll('task-lists')\n    for (const el of taskLists) {\n      if (el instanceof TaskListsElement) {\n        el.disabled = false\n        const buttons = el.querySelectorAll('button')\n        for (const button of buttons) {\n          button.disabled = false\n        }\n      }\n    }\n  }\n}\n\nexport function disableTaskList(container: Element) {\n  for (const el of container.querySelectorAll('task-lists')) {\n    if (el instanceof TaskListsElement) {\n      el.disabled = true\n\n      const buttons = el.querySelectorAll('button')\n      for (const button of buttons) {\n        button.disabled = true\n      }\n    }\n  }\n}\n\n// Persist task list source changes.\n//\n// Adds a hidden tracking input to the form to trigger server-side\n// instrumentation.\nfunction saveTaskList(container: Element, track: string, payload: CheckPayload | MovePayload | ConvertPayload) {\n  const form = container.querySelector<HTMLFormElement>('.js-comment-update')!\n\n  disableTaskList(container)\n  updateProgress(container)\n\n  const previousTracking = form.elements.namedItem('task_list_track')\n  if (previousTracking instanceof Element) previousTracking.remove()\n\n  const previousOperation = form.elements.namedItem('task_list_operation')\n  if (previousOperation instanceof Element) previousOperation.remove()\n\n  const tracking = document.createElement('input')\n  tracking.setAttribute('type', 'hidden')\n  tracking.setAttribute('name', 'task_list_track')\n  tracking.setAttribute('value', track)\n  form.appendChild(tracking)\n\n  const operation = document.createElement('input')\n  operation.setAttribute('type', 'hidden')\n  operation.setAttribute('name', 'task_list_operation')\n  operation.setAttribute('value', JSON.stringify(payload))\n  form.appendChild(operation)\n\n  if (!form.elements.namedItem('task_list_key')) {\n    const field = form.querySelector('.js-task-list-field')!\n    const name = field.getAttribute('name')!\n    const value = name.split('[')[0]!\n    const input = document.createElement('input')\n    input.setAttribute('type', 'hidden')\n    input.setAttribute('name', 'task_list_key')\n    input.setAttribute('value', value)\n    form.appendChild(input)\n  }\n\n  // If the user has ran into a stale error and is now re-submitting, hide it\n  container.classList.remove('is-comment-stale')\n\n  requestSubmit(form)\n}\n\nremoteForm('.js-task-list-container .js-comment-update', async function (form, wants) {\n  const container = form.closest('.js-task-list-container')!\n  const tracking = form.elements.namedItem('task_list_track')\n  if (tracking instanceof Element) tracking.remove()\n\n  const operation = form.elements.namedItem('task_list_operation')\n  if (operation instanceof Element) operation.remove()\n\n  let response\n  try {\n    response = await wants.json()\n  } catch (error) {\n    let data\n    try {\n      // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n      data = JSON.parse(error.response.text)\n    } catch (e) {\n      // Do nothing\n    }\n\n    if (data && data.stale) {\n      const commentField = container.querySelector<HTMLTextAreaElement>('.js-task-list-field')!\n\n      // Prevent the stale value of this field from being persisted (and, eventually, erroneously\n      // restored) if the page is refreshed. We will undo this (and restore the session-resumable\n      // behaviour) if the user clicks the 'Cancel' button to discard the stale edits in this field.\n      commentField.classList.add('session-resumable-canceled')\n      commentField.classList.remove('js-session-resumable')\n      // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    } else if (error.response.status === 422) {\n      // Do nothing\n    } else {\n      window.location.reload()\n    }\n  }\n\n  if (response) {\n    if (operation) {\n      // Store reordered Markdown source in textarea.\n      if (response.json.source) {\n        container.querySelector<HTMLTextAreaElement>('.js-task-list-field')!.value = response.json.source\n      }\n    }\n    enableTaskList(container)\n    requestAnimationFrame(() => updateProgress(container))\n  }\n})\n\n// This flag specifies whether `beforeinput` handler is called before `input` event\n// This logic is needed because Chrome (Version 86.0.4240.198) has a bug with event.inputType == 'insertText' && event.data == null in textarea\n// But Firefox does not support `beforeinput` yet (as of 9th December 2020)\nlet handleAutocomplete = false\n\n// This flag is used to track if a text composition system (as the helper for JP kanji symbols)\n// has popped up on the screen or not.\n// This is needed because the custom tabbing behavior implemented here interferes with the system element\nlet isIMEVisible = false\n\n// This flag is used to track if the document.execCommand functionality is available\n// This is prefered to use the native execCommand because it allow the use of the undo/redo functionality\nlet canUseExecCommand: boolean | null = null\n\n// This handler will set the handleAutocomplete flag so that all browsers except Firefox can handle the event correctly in autoCompleteOnInput\nfunction tryAutoCompleteOnBeforeInput(ev: Event) {\n  const event = ev as InputEvent\n\n  const isNewLine = event.inputType === 'insertLineBreak'\n  if (!isNewLine) {\n    handleAutocomplete = false\n  } else {\n    handleAutocomplete = true\n  }\n}\n\n// This handler will try autocomplete the text in textarea in all browsers\nfunction autoCompleteOnInput(ev: Event) {\n  const event = ev as InputEvent\n\n  // in Firefox this check will always pass\n  if (!handleAutocomplete) {\n    // this block will be called only in Firefox\n    // when `beforeinput` support is added to Firefox, this whole check can be removed\n    const isNewLine = event.inputType === 'insertLineBreak'\n    if (!isNewLine) return\n  }\n\n  const element = event.target as HTMLInputElement\n  listAutocomplete(element)\n  handleAutocomplete = false\n}\n\nfunction listAutocomplete(element: HTMLInputElement) {\n  const result = autocompletedList(element.value, [element.selectionStart, element.selectionEnd])\n  if (result === undefined) return\n\n  updateElementText(element, result)\n}\n\nfunction updateElementText(element: HTMLInputElement, updatedText: UpdatedText) {\n  if (canUseExecCommand === null || canUseExecCommand === true) {\n    element.contentEditable = 'true'\n    try {\n      handleAutocomplete = false // disable autocomplete due to recursion from insert text event\n      let value = undefined\n      if (updatedText.commandId === Command.insertText) {\n        value = updatedText.autocompletePrefix\n        // check if a specific part of the text should be overwritten\n        if (updatedText.writeSelection[0] !== null && updatedText.writeSelection[1] !== null) {\n          element.selectionStart = updatedText.writeSelection[0]\n          element.selectionEnd = updatedText.writeSelection[1]\n        }\n      } else {\n        // set the selection to delete the current row\n        element.selectionStart = updatedText.selection[0]\n      }\n      canUseExecCommand = document.execCommand(updatedText.commandId, false, value)\n    } catch (error) {\n      canUseExecCommand = false\n    }\n    element.contentEditable = 'false'\n  }\n\n  if (!canUseExecCommand) {\n    try {\n      document.execCommand('ms-beginUndoUnit')\n    } catch (e) {\n      // Do nothing.\n    }\n    element.value = updatedText.text\n    try {\n      document.execCommand('ms-endUndoUnit')\n    } catch (e) {\n      // Do nothing.\n    }\n    element.dispatchEvent(new CustomEvent('input', {bubbles: true, cancelable: true}))\n  }\n\n  if (updatedText.selection[0] != null && updatedText.selection[1] != null) {\n    element.selectionStart = updatedText.selection[0]\n    element.selectionEnd = updatedText.selection[1]\n  }\n}\n\nfunction handleShiftEnter(ev: Event) {\n  // TODO: Refactor to use data-hotkey\n  /* eslint eslint-comments/no-use: off */\n  /* eslint-disable no-restricted-syntax */\n  if (isIMEVisible) {\n    return\n  }\n\n  const event = ev as KeyboardEvent\n\n  if (event.key === 'Enter' && event.shiftKey && !event.metaKey) {\n    const element = event.target as HTMLInputElement\n\n    const result = addSoftNewline(element.value, [element.selectionStart, element.selectionEnd])\n    if (result === undefined) return\n\n    updateElementText(element, result)\n\n    event.preventDefault()\n    // Trigger size-to-fit (see github/github#15696)\n    fire(element, 'change')\n  }\n  /* eslint-enable no-restricted-syntax */\n}\n\nfunction onCompositionStart() {\n  isIMEVisible = true\n}\n\nfunction onCompositionEnd() {\n  isIMEVisible = false\n}\n\nfunction updateIndentation(ev: Event) {\n  // TODO: Refactor to use data-hotkey\n  /* eslint eslint-comments/no-use: off */\n  /* eslint-disable no-restricted-syntax */\n  if (isIMEVisible) {\n    return\n  }\n\n  const event = ev as KeyboardEvent\n  if (event.key === 'Escape') {\n    deselectText(ev)\n    return\n  }\n\n  if (event.key !== 'Tab') return\n\n  const element = event.target as HTMLInputElement\n\n  const result = indent(element.value, [element.selectionStart, element.selectionEnd], event.shiftKey)\n  if (result === undefined) return\n\n  event.preventDefault()\n\n  updateElementText(element, result)\n}\n\nobserve('.js-task-list-field', {\n  subscribe: el =>\n    compose(\n      fromEvent(el, 'keydown', updateIndentation),\n      fromEvent(el, 'keydown', handleShiftEnter),\n      fromEvent(el, 'beforeinput', tryAutoCompleteOnBeforeInput),\n      fromEvent(el, 'input', autoCompleteOnInput),\n      fromEvent(el, 'compositionstart', onCompositionStart),\n      fromEvent(el, 'compositionend', onCompositionEnd),\n    ),\n})\n\n// subset of https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand#commands\nenum Command {\n  insertText = 'insertText',\n  delete = 'delete',\n}\n\ntype UpdatedText = {\n  text: string\n  autocompletePrefix: string\n  selection: SelectionRange\n  writeSelection: SelectionRange\n  commandId: Command\n}\n\ntype SelectionRange = [number | null, number | null]\n\nconst INDENTATION_RE = /^(\\s*)?/\nexport function addSoftNewline(text: string, selection: SelectionRange): UpdatedText | undefined {\n  const offset = selection[0]\n  if (!offset || !text) return undefined\n\n  const lines = text.substring(0, offset).split('\\n')\n  const currentLine = lines[lines.length - 1]\n  const match = currentLine?.match(INDENTATION_RE)\n  if (!match) return undefined\n\n  const indentation = match[1] || ''\n  const autocompletePrefix = `\\n${indentation}`\n  return {\n    text: text.substring(0, offset) + autocompletePrefix + text.substring(offset),\n    autocompletePrefix,\n    selection: [offset + autocompletePrefix.length, offset + autocompletePrefix.length],\n    commandId: Command.insertText,\n    writeSelection: [null, null],\n  }\n}\n\n// matches '- ', '* ', '12. ', '- [ ]', '- [x]', `* [ ] `, `* [x] `, '12. [ ] ', '12. [x] '\nconst TASK_LIST_RE = /^(\\s*)([*-]|(\\d+)\\.)\\s(\\[[\\sx]\\]\\s)?/\n\nfunction updateRemainingNumberBullets(text: string, currentNumber: number): string {\n  let lines = text.split('\\n')\n\n  lines = lines.map(line => {\n    // regexp to check if string starts with number\n    if (line.replace(/^\\s+/, '').startsWith(`${currentNumber}.`)) {\n      const result = line.replace(`${currentNumber}`, `${currentNumber + 1}`)\n      currentNumber += 1\n      return result\n    }\n    return line\n  })\n\n  return lines.join('\\n')\n}\n\nexport function autocompletedList(text: string, selection: SelectionRange): UpdatedText | undefined {\n  const offset = selection[0]\n  if (!offset || !text) return undefined\n\n  const lines = text.substring(0, offset).split('\\n')\n  const previousLine = lines[lines.length - 2]\n\n  // Check for task list existence\n  const match = previousLine?.match(TASK_LIST_RE)\n  if (!match) return undefined\n\n  const listPrefix = match[0]\n  const indentation = match[1]\n  const bullet = match[2]\n  const numericBullet = parseInt(match[3]!, 10)\n  const hasCheckbox = Boolean(match[4])\n  const isNumericBullet = !isNaN(numericBullet)\n  const newBullet = isNumericBullet ? `${numericBullet + 1}.` : bullet\n  let newPrefix = `${newBullet} ${hasCheckbox ? '[ ] ' : ''}`\n\n  let currentLineEnd = text.indexOf('\\n', offset)\n  if (currentLineEnd < 0) {\n    currentLineEnd = text.length\n  }\n  const currentLine = text.substring(offset, currentLineEnd)\n  // do not append list item if already present\n  if (currentLine.startsWith(newPrefix)) {\n    newPrefix = ''\n  }\n  /*\n    Autocomplete list element on next line if current line has list element containing text.\n    or there's text on the line after the cursor (|):\n    ```\n    - | some text\n    ```\n    becomes:\n    ```\n    -\n    - | some text\n    ```\n   */\n  const shouldAutocomplete = previousLine!.replace(listPrefix, '').trim().length > 0 || currentLine.trim().length > 0\n  if (shouldAutocomplete) {\n    let autocompletePrefix = `${indentation}${newPrefix}`\n    let autocompletePostfix = text.substring(offset)\n    const autocompletePrefixLength = autocompletePrefix.length\n\n    let writeSelection = [null, null] as SelectionRange\n    const whiteSpaceRegex = /^\\s*$/g\n    let resultText = text.substring(0, offset) + autocompletePrefix + autocompletePostfix\n\n    if (isNumericBullet && !text.substring(offset).match(whiteSpaceRegex)) {\n      autocompletePostfix = updateRemainingNumberBullets(text.substring(offset), numericBullet + 1)\n      autocompletePrefix += autocompletePostfix\n      writeSelection = [offset, offset + autocompletePrefix.length] as SelectionRange\n      resultText = text.substring(0, offset) + autocompletePrefix\n    }\n\n    return {\n      text: resultText,\n      autocompletePrefix,\n      selection: [offset + autocompletePrefixLength, offset + autocompletePrefixLength],\n      commandId: Command.insertText,\n      writeSelection,\n    }\n  } else {\n    // This case clears the autocompleted list element if user hits an enter without adding any text to it.\n    const offsetWithoutPrefix = offset - `\\n${listPrefix}`.length\n    return {\n      autocompletePrefix: '',\n      text: text.substring(0, offsetWithoutPrefix) + text.substring(offset),\n      selection: [offsetWithoutPrefix, offsetWithoutPrefix],\n      commandId: Command.delete,\n      writeSelection: [null, null],\n    }\n  }\n}\n\nexport function indent(text: string, selection: SelectionRange, substract: boolean): UpdatedText | undefined {\n  // Perform indentation manipulations only when more than one character was selected.\n  const selectionStart = selection[0] || 0\n  const selectionEnd = selection[1] || selectionStart\n  if (selection[0] === null || selectionStart === selectionEnd) return undefined\n\n  const startOffset = text.substring(0, selectionStart).lastIndexOf('\\n') + 1\n  const endOffsetPreNormalization = text.indexOf('\\n', selectionEnd - 1)\n  const endOffset = endOffsetPreNormalization > 0 ? endOffsetPreNormalization : text.length - 1\n  const selectedLines = text.substring(startOffset, endOffset).split('\\n')\n\n  let startUpdated = false\n  let selectionStartDiff = 0\n  let selectionEndDiff = 0\n  const updatedSelectedLines: string[] = []\n  for (const line of selectedLines) {\n    const match = line.match(/^\\s*/)\n    if (match) {\n      let indentation = match[0]\n      const lineText = line.substring(indentation.length)\n      if (substract) {\n        const prevLength = indentation.length\n        indentation = indentation.slice(0, -2)\n\n        // Update selectionStart for first line only.\n        selectionStartDiff = startUpdated ? selectionStartDiff : indentation.length - prevLength\n        startUpdated = true\n        selectionEndDiff += indentation.length - prevLength\n      } else {\n        indentation += '  '\n        selectionStartDiff = 2\n        selectionEndDiff += 2\n      }\n      updatedSelectedLines.push(indentation + lineText)\n    }\n  }\n\n  const linesString = updatedSelectedLines.join('\\n')\n  const newText = text.substring(0, startOffset) + linesString + text.substring(endOffset)\n  const newRange: SelectionRange = [\n    Math.max(startOffset, selectionStart + selectionStartDiff),\n    selectionEnd + selectionEndDiff,\n  ]\n  return {\n    text: newText,\n    selection: newRange,\n    autocompletePrefix: linesString,\n    commandId: Command.insertText,\n    writeSelection: [startOffset, endOffset],\n  }\n}\n\nexport function listIndex(list: Element): number {\n  const container = list.closest('task-lists')\n  if (!container) throw new Error('parent not found')\n  // TODO: De-duplicate this query with respect to https://github.com/github/task-lists-element/pull/32/files#diff-bea14c7a32797e69e22afe268a352c644b1286e415a79e1cf35ef9ebea42b3a3R178-R183\n  const lists = Array.from(container.querySelectorAll('ol, ul')).filter(item => {\n    return !item.closest('tracking-block')\n  })\n  return lists.indexOf(list)\n}\n\nfunction deselectText(ev: Event) {\n  const event = ev as KeyboardEvent\n  const element = event.target as HTMLInputElement\n  if (element.selectionDirection === 'backward') {\n    element.selectionEnd = element.selectionStart\n  } else {\n    element.selectionStart = element.selectionEnd\n  }\n}\n\nfunction updateProgress(container: Element) {\n  if (document.querySelectorAll('tracked-issues-progress').length === 0) return\n\n  const isInTimeline = container.closest<HTMLElement>('.js-timeline-item')\n  if (isInTimeline) return\n\n  const checkboxes = container.querySelectorAll<HTMLInputElement>('.js-comment-body [type=checkbox]')\n  const total = checkboxes.length\n  const completed = Array.from(checkboxes).filter(checkbox => checkbox.checked).length\n  const progressComponents = document.querySelectorAll('tracked-issues-progress[data-type=checklist]')\n  for (const progress of progressComponents) {\n    progress.setAttribute('data-completed', String(completed))\n    progress.setAttribute('data-total', String(total))\n  }\n}\n\n// Finds the task-list ul that is furthest up the DOM tree from the given element\nfunction findTopLevelTasklistContainer(listElement: Element): Element | null {\n  let parentLi = listElement.closest<HTMLLIElement>('.contains-task-list')!\n  let nextParent = parentLi\n  // traverse up to find the list item furthest up in the tree, which will allow us to flatten a multi-tiered\n  // tasklist into a single level\n  while (\n    (nextParent = nextParent.parentElement!.closest<HTMLLIElement>('.contains-task-list')!) !== parentLi &&\n    nextParent !== null\n  ) {\n    parentLi = nextParent\n  }\n  return parentLi\n}\n","// eslint-disable-next-line no-restricted-imports\nimport {fire} from 'delegated-events'\n\ntype Options = {\n  content: DocumentFragment | Promise<DocumentFragment> | Node\n  dialogClass?: string\n  detailsClass?: string\n  labelledBy?: string | null\n  label?: string | null\n  errorMessage?: string | null\n}\n\n// Open the site-wide Details Dialog element.\nexport async function dialog(options: Options): Promise<HTMLElement> {\n  const dialogTemplate = document.querySelector<HTMLTemplateElement>('#site-details-dialog')!\n  const clonedDetails = dialogTemplate.content.cloneNode(true) as Element\n  const details = clonedDetails.querySelector<HTMLElement>('details')!\n  const detailsDialog = details.querySelector<HTMLElement>('details-dialog')!\n  const spinner = details.querySelector<HTMLElement>('.js-details-dialog-spinner')!\n  if (options.detailsClass) details.classList.add(...options.detailsClass.split(' '))\n  if (options.dialogClass) detailsDialog.classList.add(...options.dialogClass.split(' '))\n\n  if (options.label) {\n    detailsDialog.setAttribute('aria-label', options.label)\n  } else if (options.labelledBy) {\n    detailsDialog.setAttribute('aria-labelledby', options.labelledBy)\n  }\n\n  document.body.append(clonedDetails)\n  try {\n    const content = await options.content\n    spinner.remove()\n    detailsDialog.prepend(content)\n  } catch (error) {\n    spinner.remove()\n    // create a span with the error message\n    const errorSpan = document.createElement('span')\n    errorSpan.textContent = options.errorMessage || \"Couldn't load the content\"\n    errorSpan.classList.add('my-6')\n    errorSpan.classList.add('mx-4')\n    detailsDialog.prepend(errorSpan)\n  }\n\n  details.addEventListener('toggle', () => {\n    if (details.hasAttribute('open')) return\n    fire(detailsDialog, 'dialog:remove')\n    details.remove()\n  })\n\n  return detailsDialog\n}\n","//  Get document's HTML Safe nonce.\n//\n// Example:\n//\n//   <meta name=\"html-safe-nonce\" content=\"de43a1f355c711f7f705e4f971964391ac0c8e13\">\nexport function getDocumentHtmlSafeNonces(document: Document): string[] {\n  const nonces = [...document.querySelectorAll<HTMLMetaElement>('meta[name=html-safe-nonce]')].map(meta => meta.content)\n\n  if (nonces.length < 1) {\n    throw new Error('could not find html-safe-nonce on document')\n  }\n  return nonces\n}\n\ninterface Response {\n  headers: Headers\n  status: number\n}\n\nclass ResponseError extends Error {\n  response: Response\n\n  constructor(message: string, response: Response) {\n    super(`${message} for HTTP ${response.status}`)\n    this.response = response\n  }\n}\n\nexport function verifyResponseHtmlSafeNonce(nonces: string[], response: Response, allowJson = false) {\n  const contentType = response.headers.get('content-type') || ''\n  if (!allowJson && !contentType.startsWith('text/html')) {\n    throw new ResponseError(`expected response with text/html, but was ${contentType}`, response)\n  }\n\n  if (allowJson && !(contentType.startsWith('text/html') || contentType.startsWith('application/json'))) {\n    throw new ResponseError(`expected response with text/html or application/json, but was ${contentType}`, response)\n  }\n\n  const responseNonce = response.headers.get('x-html-safe')\n  if (!responseNonce) {\n    throw new ResponseError(`missing X-HTML-Safe nonce`, response)\n  } else if (!nonces.includes(responseNonce)) {\n    throw new ResponseError(`response X-HTML-Safe nonce did not match`, response)\n  }\n}\n","import {getDocumentHtmlSafeNonces, verifyResponseHtmlSafeNonce} from '@github-ui/html-safe-nonce'\nimport {ghTrustedTypes} from '@github-ui/trusted-types'\n\n// This is a no-op policy to be used with server-side rendered HTML.\nexport const serverXSafeHTMLPolicy = ghTrustedTypes.createPolicy('server-x-safe-html', {\n  createHTML: (s: string, response: Response) => {\n    verifyResponseHtmlSafeNonce(getDocumentHtmlSafeNonces(document), response)\n    return s\n  },\n})\n","import {parseHTML} from './parse-html'\nimport {serverXSafeHTMLPolicy} from '@github-ui/trusted-types-policies/server-x-safe-html'\n\nexport async function fetchSafeDocumentFragment(\n  document: Document,\n  url: RequestInfo,\n  options?: RequestInit,\n): Promise<DocumentFragment> {\n  const request = new Request(url, options)\n  request.headers.append('X-Requested-With', 'XMLHttpRequest')\n  const response = await self.fetch(request)\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n  }\n  const trustedHTML = serverXSafeHTMLPolicy.createHTML(await response.text(), response)\n  return parseHTML(document, trustedHTML)\n}\n\nexport function fetchPoll(\n  url: RequestInfo,\n  options?: RequestInit,\n  timeBetweenRequests = 1000,\n  acceptedStatusCodes = [200],\n): Promise<Response> {\n  return (async function poll(wait: number): Promise<Response> {\n    const request = new Request(url, options)\n    request.headers.append('X-Requested-With', 'XMLHttpRequest')\n    const response = await self.fetch(request)\n\n    if (response.status === 202) {\n      await new Promise(resolve => setTimeout(resolve, wait))\n      return poll(wait * 1.5)\n    }\n    if (acceptedStatusCodes.includes(response.status)) {\n      return response\n    }\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n    }\n    throw new Error(`Unexpected ${response.status} response status from poll endpoint`)\n  })(timeBetweenRequests)\n}\n\ntype RetryResult = Response | 'retry'\ntype FetchRetryOptions = {\n  // Base wait time between retries\n  // this will be multiplied with the current attempt to perform a backoff strategy\n  // Defaults to 500ms\n  wait?: number\n  // List of accepted status codes that should not be retried. Defaults to [200]\n  acceptedStatusCodes?: number[]\n  // Max number of attempts. Defaults to 3\n  max?: number\n  // Current retry attempt. Starts at 0\n  attempt?: number\n}\n\n// Execute a fetch call in a callback and retry it up to `options.max` times\n// Each retry will be delayed `options.wait` * `options.attempt`\nexport async function fetchRetry(\n  url: RequestInfo,\n  fetchOptions?: RequestInit,\n  options?: FetchRetryOptions,\n): Promise<Response> {\n  const {wait = 500, acceptedStatusCodes = [200], max = 3, attempt = 0} = options || {}\n\n  const retry: () => Promise<RetryResult> = async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          const request = new Request(url, fetchOptions)\n          request.headers.append('X-Requested-With', 'XMLHttpRequest')\n          const response = await self.fetch(request)\n          if (acceptedStatusCodes.includes(response.status) || attempt + 1 === max) {\n            return resolve(response)\n          }\n\n          // The response failed, we indicate that it must be retried\n          resolve('retry')\n        } catch (err) {\n          // Only non successful HTTP status codes are controlled by this retry mechanism\n          // Any other error is propagated\n          reject(err)\n        }\n      }, wait * attempt)\n    })\n  }\n\n  const result = await retry()\n  if (result !== 'retry') {\n    return result\n  }\n\n  return fetchRetry(url, fetchOptions, {wait, acceptedStatusCodes, max, attempt: attempt + 1})\n}\n","// React to elements receiving focus\n//\n// Often we need to apply some behavior to form elements when they start getting\n// interacted with. We could use `observe`, but that can be expensive if there\n// are many such elements on the page, and when we aren't actually interested in\n// those elements until they receive focus.\n//\n// This is a lightweight and preferred alternative to the family of methods\n// from `github/focused` module.\n//\n// Examples\n//\n//   onFocus('.js-widget', element => {\n//     // ...\n//   })\n\nimport SelectorSet from 'selector-set'\n\nlet initialized = false\nconst selectorSet: SelectorSet<(el: HTMLElement) => void> = new SelectorSet()\n\nfunction handleFocus(event: FocusEvent) {\n  const focused = event.target\n  if (focused instanceof HTMLElement && focused.nodeType !== Node.DOCUMENT_NODE) {\n    for (const match of selectorSet.matches(focused)) {\n      match.data.call(null, focused)\n    }\n  }\n}\n\nexport function onFocus(selector: string, fn: (el: HTMLElement) => unknown) {\n  if (!initialized) {\n    initialized = true\n    // We use the \"focus\" event in the capture phase because Firefox\n    // historically had a limitation with \"focusin\" not bubbling.\n    document.addEventListener('focus', handleFocus, true)\n  }\n  selectorSet.add(selector, fn)\n\n  if (document.activeElement instanceof HTMLElement && document.activeElement.matches(selector)) {\n    fn(document.activeElement)\n  }\n}\n\nexport function onKey(\n  eventType: 'keydown' | 'keypress' | 'keyup',\n  selector: string,\n  inputHandler: (event: KeyboardEvent) => unknown,\n) {\n  function blurHandler(event: Event) {\n    const currentTarget = event.currentTarget as HTMLElement\n    if (!currentTarget) return\n    currentTarget.removeEventListener(eventType, inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener(eventType, inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n\nexport function onInput(selector: string, inputHandler: EventListener) {\n  function blurHandler(event: Event) {\n    const {currentTarget} = event\n    if (!currentTarget) return\n\n    currentTarget.removeEventListener('input', inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener('input', inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n","import {dialog} from './details-dialog'\nimport {fetchSafeDocumentFragment} from './fetch'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n\nfunction waitForDialogClose(dialogEl: HTMLElement): Promise<unknown> {\n  return new Promise(resolve => {\n    dialogEl.addEventListener('dialog:remove', resolve, {once: true})\n  })\n}\n\nfunction setModalStatus(success: boolean) {\n  const modal = document.querySelector('.sso-modal')\n  if (!modal) return\n\n  modal.classList.remove('success', 'error')\n\n  if (success) modal.classList.add('success')\n  else modal.classList.add('error')\n}\n\nfunction updateExpiresAroundTag(expiresAround: string) {\n  const expiryTag = document.querySelector('meta[name=sso-expires-around]')\n  if (expiryTag) expiryTag.setAttribute('content', expiresAround)\n}\n\n// Asks the user to perform single sign-on for the current organization. SSO\n// take place in a new window so we'll need to set up a way for the other window\n// to tell us when SSO is complete and whether or not it was successful.\nasync function ssoPrompt() {\n  const link = document.querySelector<HTMLLinkElement>('link[rel=sso-modal]')!\n  const prompt = await dialog({content: fetchSafeDocumentFragment(document, link.href), dialogClass: 'sso-modal'})\n\n  let sso = null\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, compat/compat\n  const external: any = window.external\n\n  // Expose callback method for the SSO window to invoke with its status when complete.\n  external.ssoComplete = function (data: {error: boolean; expiresAround: string}) {\n    if (data.error) {\n      sso = false\n      setModalStatus(sso)\n    } else {\n      sso = true\n      setModalStatus(sso)\n      updateExpiresAroundTag(data.expiresAround)\n      window.focus()\n    }\n\n    // Remove the external function now that it's served its purpose\n    external.ssoComplete = null\n  }\n\n  await waitForDialogClose(prompt)\n\n  if (!sso) {\n    throw new Error('sso prompt canceled')\n  }\n}\n\n// Watch for modal complete elements. This is shown as the final step of the\n// single sign-on process that happens in a separate window. Once we see this\n// we know SSO is complete and we can try to tell the original window what the\n// status is before closing the SSO window.\nobserve('.js-sso-modal-complete', function (el) {\n  if (window.opener && window.opener.external.ssoComplete) {\n    const error = el.getAttribute('data-error')\n    const expiresAround = el.getAttribute('data-expires-around')\n\n    window.opener.external.ssoComplete({\n      error,\n      expiresAround,\n    })\n    window.close()\n  } else {\n    const fallback = el.getAttribute('data-fallback-url')\n    if (fallback) window.location.href = fallback\n  }\n})\n\nfunction expiresSoon(expiresTag: Element | null): boolean {\n  if (!(expiresTag instanceof HTMLMetaElement)) return true\n\n  const expiresAround = parseInt(expiresTag.content)\n  const now = new Date().getTime() / 1000\n\n  return now > expiresAround\n}\n\n// Remotely checks the single-sign on status for the current page. If the link tags are\n// not present in the <head>, the current page is not enforced and the status is considered good.\nasync function fetchSsoStatus(): Promise<boolean> {\n  const sessionTag = document.querySelector('link[rel=sso-session]')\n  const expiryTag = document.querySelector('meta[name=sso-expires-around]')\n\n  if (!(sessionTag instanceof HTMLLinkElement)) return true // No SSO enforcement head tags. SSO not enforced.\n  if (!expiresSoon(expiryTag)) return true // Don't bother checking unless we're nearing SSO session expiry\n\n  const url = sessionTag.href\n  const response = await fetch(url, {headers: {Accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest'}})\n  const result: boolean = await response.json()\n  return result\n}\n\nlet activeSsoPrompt: Promise<void> | null = null\n\nfunction clearActiveSsoPrompt() {\n  activeSsoPrompt = null\n}\n\n// Checks to see if the user has a valid single sign-on session for the current\n// page. If not and the page is enforced, it blocks the callback until the user\n// renews their SSO session.\n/* eslint-disable-next-line import/no-anonymous-default-export */\nexport default async function () {\n  const sso = await fetchSsoStatus()\n\n  if (!sso) {\n    if (!activeSsoPrompt) {\n      activeSsoPrompt = ssoPrompt()\n        /* eslint-disable-next-line github/no-then */\n        .then(clearActiveSsoPrompt)\n        /* eslint-disable-next-line github/no-then */\n        .catch(clearActiveSsoPrompt)\n    }\n\n    await activeSsoPrompt\n  }\n}\n","// TODO: Research replacing this module with a composable observable library.\n// The scope of this module simply returns a finalized subscription object.\n\n// Lightweight TC39 observable Subscription.\nexport class Subscription {\n  constructor(cleanup: () => void) {\n    this.closed = false\n    this.unsubscribe = () => {\n      cleanup()\n      this.closed = true\n    }\n  }\n\n  // A boolean value indicating whether the subscription is closed.\n  closed: boolean\n  // Cancels the subscription.\n  unsubscribe: () => void\n}\n\n// Create a Subscription from an event.\nexport function fromEvent(\n  target: EventTarget,\n  eventName: string,\n  onNext: EventListenerOrEventListenerObject,\n  options: AddEventListenerOptions = {capture: false},\n): Subscription {\n  target.addEventListener(eventName, onNext, options)\n  return new Subscription(() => {\n    target.removeEventListener(eventName, onNext, options)\n  })\n}\n\n// Combine several subscriptions into a single subscription.\n//\n// subscriptions - A list of subscriptions to combine.\n//\n// Returns a single, combined, subscription.\nexport function compose(...subscriptions: Subscription[]): Subscription {\n  return new Subscription(() => {\n    for (const subscription of subscriptions) {\n      subscription.unsubscribe()\n    }\n  })\n}\n"],"names":["areCharacterKeyShortcutsEnabled","keyboardShortcutsPreference","document","querySelector","content","isNonCharacterKeyShortcut","test","hotkey","includes","isShortcutAllowed","eventToHotkeyString","event","enableTaskList","container","taskLists","querySelectorAll","el","TaskListsElement","disabled","buttons","button","disableTaskList","saveTaskList","track","payload","form","updateProgress","previousTracking","elements","namedItem","Element","remove","previousOperation","tracking","createElement","setAttribute","appendChild","operation","JSON","stringify","field","name","getAttribute","value","split","input","classList","requestSubmit","observe","closest","parentContainer","findTopLevelTasklistContainer","alreadyContainsButton","Array","from","children","some","child","contains","template","ownerDocument","clonedNode","cloneNode","on","src","dst","detail","currentTarget","position","checked","target","taskListContainer","listIndex","remoteForm","wants","response","json","error","data","parse","text","e","stale","commentField","add","status","window","location","reload","source","requestAnimationFrame","handleAutocomplete","isIMEVisible","canUseExecCommand","tryAutoCompleteOnBeforeInput","ev","isNewLine","inputType","autoCompleteOnInput","element","listAutocomplete","result","autocompletedList","selectionStart","selectionEnd","undefined","updateElementText","updatedText","contentEditable","commandId","Command","insertText","autocompletePrefix","writeSelection","selection","execCommand","dispatchEvent","CustomEvent","bubbles","cancelable","handleShiftEnter","key","shiftKey","metaKey","addSoftNewline","preventDefault","fire","onCompositionStart","onCompositionEnd","updateIndentation","deselectText","indent","subscribe","compose","fromEvent","delete","INDENTATION_RE","offset","lines","substring","currentLine","length","match","indentation","TASK_LIST_RE","updateRemainingNumberBullets","currentNumber","map","line","replace","startsWith","join","previousLine","listPrefix","bullet","numericBullet","parseInt","hasCheckbox","Boolean","isNumericBullet","isNaN","newBullet","newPrefix","currentLineEnd","indexOf","shouldAutocomplete","trim","autocompletePostfix","autocompletePrefixLength","resultText","offsetWithoutPrefix","substract","startOffset","lastIndexOf","endOffsetPreNormalization","endOffset","selectedLines","startUpdated","selectionStartDiff","selectionEndDiff","updatedSelectedLines","lineText","prevLength","slice","push","linesString","newText","newRange","Math","max","list","lists","filter","item","selectionDirection","isInTimeline","checkboxes","total","completed","checkbox","progressComponents","progress","String","listElement","parentLi","nextParent","parentElement","dialog","options","dialogTemplate","clonedDetails","details","detailsDialog","spinner","detailsClass","dialogClass","label","labelledBy","body","append","prepend","errorSpan","textContent","errorMessage","addEventListener","hasAttribute","getDocumentHtmlSafeNonces","nonces","meta","ResponseError","Error","constructor","message","verifyResponseHtmlSafeNonce","allowJson","contentType","headers","get","responseNonce","serverXSafeHTMLPolicy","ghTrustedTypes","createHTML","s","fetchSafeDocumentFragment","url","request","Request","self","fetch","statusText","trustedHTML","parseHTML","fetchPoll","timeBetweenRequests","acceptedStatusCodes","poll","wait","Promise","resolve","setTimeout","fetchRetry","fetchOptions","attempt","retry","reject","err","initialized","selectorSet","SelectorSet","handleFocus","focused","HTMLElement","nodeType","Node","DOCUMENT_NODE","matches","call","onFocus","selector","fn","activeElement","onKey","eventType","inputHandler","blurHandler","removeEventListener","onInput","waitForDialogClose","dialogEl","once","setModalStatus","success","modal","updateExpiresAroundTag","expiresAround","expiryTag","ssoPrompt","link","prompt","href","sso","external","ssoComplete","focus","expiresSoon","expiresTag","HTMLMetaElement","now","Date","getTime","fetchSsoStatus","sessionTag","HTMLLinkElement","Accept","opener","close","fallback","activeSsoPrompt","clearActiveSsoPrompt","then","catch","Subscription","cleanup","closed","unsubscribe","eventName","onNext","capture","subscriptions","subscription"],"sourceRoot":""}