{"version":3,"file":"ui_packages_soft-nav_soft-nav_ts-xxxxxxxxxxxx.js","mappings":"uKAGO,SAASA,EAAoBC,CAAe,CAAE,CACnDC,EAASC,EAAeF,GAC1B,CAGO,SAASC,EAASE,CAAe,CAAE,CACxCC,EAAoBD,EACtB,CAGA,SAASC,EAAoBD,CAAe,CAAE,CAC5C,IAAME,EAAYC,EAAAA,EAAeA,EAAEC,cAAc,mCAE5CF,IACDA,EAAUG,WAAW,GAAKL,EAM5BE,EAAUG,WAAW,CAAG,CAAC,EAAEL,EAAQ,MAAM,CAAC,CAE1CE,EAAUG,WAAW,CAAGL,EAE5B,CAGA,SAASD,EAAeF,CAAe,CAAU,CAG/C,MAAO,CAACA,EAAGS,YAAY,CAAC,eAAiBT,EAAGU,SAAS,EAAI,EAAC,EAAGC,IAAI,EACnE,C,yDC3BO,IAAMC,EACX,EAAIN,EAAeA,EAAEO,aAAe,eAAiBP,EAAAA,EAAeA,EAAEO,aAAe,WAC5EC,QAAQC,OAAO,GAEf,IAAID,QAAcC,GAAW,CAClCT,EAAAA,EAAeA,EAAEU,iBAAiB,mBAAoB,IAAM,CAC1DD,GACF,EACF,EACD,CAOUE,EACX,EAAIX,EAAeA,EAAEO,aAAe,WAC3BC,QAAQC,OAAO,GAEf,IAAID,QAAQC,GAAW,CAC5BG,EAAAA,EAAaA,EAAEF,iBAAiB,OAAQD,EAC1C,EACD,E,8EC3BH,IAAMI,EAAqBC,CAAAA,EAAAA,EAAAA,CAAAA,EAAQC,GAKnC,SAASA,GAA4B,CACnC,OAAOf,EAAAA,EAAeA,EAAEgB,MAAMf,cAA+B,qCAAqCgB,SAAW,EAC/G,CAEO,IAAMC,EAAoBJ,CAAAA,EAAAA,EAAAA,CAAAA,EAAQK,GACzC,SAASA,GAAmC,CAC1C,OAAOnB,EAAAA,EAAeA,EAAEgB,MAAMf,cAA+B,qCAAqCgB,UAAY,MAChH,CAEO,IAAMG,EAAeN,CAAAA,EAAAA,EAAAA,CAAAA,EAAQO,GACpC,SAASA,GAAmC,CAC1C,MAAOR,eAAAA,GACT,CAGO,IAAMS,EAA2CC,S,qECdxD,YAAMC,YACJC,SAAU,CACR,OAAO,IAAI,CAGbC,SAAU,CAEV,CAEAC,YAAa,CAEb,CAEAC,OAAQ,CAER,CAEAC,KAAM,CACJ,OAAO,IAAI,CAGb,IAAIC,QAAS,CACX,OAAO,CACT,CACF,EAiBe,SAASC,EACtBC,CAA0B,CAC1BC,EAA8B,CAACC,sBAAuB,EAAK,CAAC,CAC5DC,EAASvB,EAAAA,EAAa,CACtBwB,EAAoCC,GAASA,CAAqB,CAClEC,EAAkC,GAAcD,CAA0B,CAC1E,KACIE,EACJ,GAAI,CACF,GAAI,CAACJ,EAEH,MAAM,OAAW,CAGnBI,EAAUJ,CAAM,CAACH,EAAW,EAAI,IAAIR,CACtC,CAAE,KAAM,CACNe,EAAU,IAAIf,CAChB,CAEA,GAAM,CAACU,sBAAAA,CAAqB,CAAC,CAAGD,EAEhC,SAASO,EAAUX,CAAgC,CAAE,CAC/CI,EAAQQ,cAAc,EACxBC,CAAAA,EAAAA,EAAAA,CAAAA,EAAU,CAACC,aAAcd,CAAG,EAEhC,CA6CA,SAASF,EAAWE,CAAW,CAAE,CAC/B,GAAI,CAEF,GADAU,EAAQZ,UAAU,CAACE,GACfI,EAAQW,GAAG,CAAE,CACf,IAAMC,EAAY,CAAC,EAAEhB,EAAI,OAAO,CAAC,CACjCU,EAAQZ,UAAU,CAACkB,EACrB,CAAC,CACD,MAAOC,EAAO,CAEhB,CACF,CAEA,MAAO,CACLrB,QAvDF,SAAiBI,CAAW,CAAEkB,EAAc,IAAIC,OAAOC,OAAO,EAAE,CAAY,CAC1E,GAAI,CACF,IAAMZ,EAAQE,EAAQd,OAAO,CAACI,GAC9B,GAAI,CAACQ,EACH,OAAO,IAAI,CAEb,IAAMQ,EAAY,CAAC,EAAEhB,EAAI,OAAO,CAAC,CAC3BqB,EAASC,OAAOZ,EAAQd,OAAO,CAACoB,IACtC,GAAIK,GAAUH,EAAMG,EAIlB,OAHAvB,EAAWE,GACXF,EAAWkB,GACXL,EAAU,8BACH,IAAI,CAGX,OADAA,EAAU,iCACHJ,EAAYC,EAEvB,CAAE,MAAOS,EAAO,CAEd,OAAO,IAAI,CAEf,EAmCEpB,QA5BF,SAAiBG,CAAW,CAAEQ,CAAQ,CAAEU,EAAc,IAAIC,OAAOC,OAAO,EAAE,CAAE,CAC1E,GAAI,CAEF,GADAV,EAAQb,OAAO,CAACG,EAAKS,EAAUD,IAC3BJ,EAAQW,GAAG,CAAE,CACf,IAAMC,EAAY,CAAC,EAAEhB,EAAI,OAAO,CAAC,CAC3BqB,EAASH,EAAMd,EAAQW,GAAG,CAChCL,EAAQb,OAAO,CAACmB,EAAWK,EAAOE,QAAQ,GAC5C,CAAC,CACD,MAAON,EAAO,CACd,GAAIZ,GAAyBY,aAAiBO,OAASP,EAAMjD,OAAO,CAACyD,WAAW,GAAGC,QAAQ,CAAC,SAAU,MAAMT,CAAK,CAErH,EAkBEnB,WAAAA,EACAC,MAAOW,EAAQX,KAAK,CACpBC,IAAKU,EAAQV,GAAG,CAChB,IAAIC,QAAS,CACX,OAAOS,EAAQT,MAAM,CAEzB,CACF,CAEO,SAAS0B,EAAmBC,CAA8B,CAAE,CACjE,OAAO1B,EACL0B,EACA,CAACvB,sBAAuB,EAAK,EAC7BwB,OACAC,KAAKC,KAAK,CACVD,KAAKE,SAAS,CAElB,C,qECtJO,GAAM,CAACpC,QAAAA,CAAO,CAAEC,QAAAA,CAAO,CAAEC,WAAAA,CAAU,CAAC,CAAGI,CAAAA,EAAAA,EAAAA,CAAAA,EAAY,iB,gQCE1D,YAAM+B,qBAAqBC,MAGzBC,YAAYC,CAA2B,CAAEC,CAAY,CAAE,CACrD,KAAK,CAACA,GACN,IAAI,CAACD,SAAS,CAAGA,CACnB,CACF,EAEO,4BAAME,0BAA0BL,EACrCE,YAAYC,CAA2B,CAAE,CACvC,KAAK,CAACA,EAAWG,EAAeC,KAAK,CACvC,CACF,EAEO,8BAAMC,4BAA4BR,EAGvCE,YAAYC,CAA2B,CAAEM,CAAkB,CAAE,CAC3D,KAAK,CAACN,EAAWG,EAAeI,OAAO,EACvC,IAAI,CAACD,UAAU,CAAGA,CACpB,CACF,EAEO,4BAAME,0BAA0BX,EAGrCE,YAAYC,CAA2B,CAAEnB,CAAa,CAAE,CACtD,KAAK,CAACmB,EAAWG,EAAeM,KAAK,EACrC,IAAI,CAAC5B,KAAK,CAAGA,CACf,CACF,EAEO,0BAAM6B,wBAAwBb,EACnCE,YAAYC,CAA2B,CAAE,CACvC,KAAK,CAACA,EAAWG,EAAeQ,GAAG,CACrC,CACF,E,eCrCO,IAAMC,EAAyB,0BACzBC,EAAsG,CACjHC,MAAO,QACPC,MAAO,QACP,cAAe,QACfC,GAAI,KACJC,KAAM,MACR,EACO,SAASC,GAAY,CAC1BC,YAAYC,IAAI,CAACR,EACnB,CAEA,SAASS,GAA8B,CACrC,GAAIF,IAAAA,YAAYG,gBAAgB,CAACV,GAAwB/C,MAAM,CAC7D,OAAO,IAAI,CAGbsD,YAAYI,OAAO,CAACX,EAAwBA,GAC5C,IAAMY,EAAWL,YAAYG,gBAAgB,CAACV,GACxCW,EAAUC,EAASC,GAAG,GAC5B,OAAOF,EAAUA,EAAQG,QAAQ,CAAG,IAAI,CAGnC,SAASC,EAAiBC,CAA0B,CAAE,CAC3DnD,CAAAA,EAAAA,EAAAA,CAAAA,EAAU,CACRmD,mBAAAA,EACAC,cAAeC,IACfC,YAAatC,OAAOuC,QAAQ,CAACC,IAAI,EAErC,CAEO,SAASC,GAAkB,CAChC,IAAMR,EAAWL,IAEjB,GAAI,CAACK,EAAU,OAEf,IAAM1B,EAAYa,CAAiB,CAACsB,IAAsB,CACpDC,EAAkBC,KAAKC,KAAK,CAACZ,GAE/B1B,IAAca,EAAkBE,KAAK,EACvCwB,SAASC,aAAa,CAAC,IAAIC,YAAY,kBAAmB,CAACC,OAAQ,CAAChB,SAAUU,CAAe,CAAC,IAEhG3D,CAAAA,EAAAA,EAAAA,CAAAA,EAAU,CACRkE,WAAYlD,OAAOuC,QAAQ,CAACC,IAAI,CAChCW,qBAAsB,CACpB5C,UAAAA,EACA6C,YAAaC,KAA4B,QACzCpB,SAAUU,EACVW,UAAWC,KAA4B,OACzC,CACF,EACF,CCzCO,IAAM7C,EAAiB8C,OAAOC,MAAM,CAAC,CAC1CC,QAAS,mBACT/C,MAAO,iBACPG,QAAS,mBACTE,MAAO,iBACP2C,aAAc,wBACdzC,IAAK,eACL0C,OAAQ,kBACRC,aAAc,CACZlD,MAAO,8BACPO,IAAK,2BACP,CACF,GAOa4C,EAAgC,SACzCjD,EAAa,EAEV,SAASkD,GAAc,CAC5BlD,EAAa,EACbiC,SAASC,aAAa,CAAC,IAAI1C,MAAMK,EAAegD,OAAO,GAEvDM,GACF,CAEO,SAASC,EAAa1D,CAA2B,CAAE,CACpD2D,MAEJC,IACArB,SAASC,aAAa,CAAC,IAAItC,kBAAkBF,IAE7C6D,EAAoB7D,GACpB8D,IACAC,IACA7C,IACF,CAEO,SAAS8C,EAAehG,EAA0B,CAAC,CAAC,CAAE,CACtDiG,EAAgBjG,KAErBsC,GAAc,EAEdiC,SAASC,aAAa,CAAC,IAAInC,oBAAoB8B,IAAuB7B,IACtE4D,EAAWlG,GACb,CAEO,SAASmG,EAAYnG,EAA0B,CAAC,CAAC,CAAE,CACxD,GAAI,CAACiG,EAAgBjG,GAAU,OAE/BsC,EAAa,EACb,IAAM8D,EAASC,KAA0Bd,EACzChB,SAASC,aAAa,CAAC,IAAIhC,kBAAkB2B,IAAuBiC,IAEpEE,IACA3C,EAAiByC,GACjBX,GACF,CAEO,SAASS,EAAWlG,EAA0B,CAAC,CAAC,CAAE,CAClDiG,EAAgBjG,KAErBsG,IACA/B,SAASC,aAAa,CAAC,IAAI9B,gBAAgByB,MAE3CoC,IACF,CAEO,SAASC,EAAgBxG,EAA0B,CAAC,CAAC,CAAE,CACvDiG,EAAgBjG,KAErBkE,IACAK,SAASC,aAAa,CAAC,IAAI1C,MAAMK,EAAekD,MAAM,GACxD,CAEO,SAASoB,GAAc,CAC5BlC,SAASC,aAAa,CAAC,IAAI1C,MAAMK,EAAeiD,YAAY,EAC9D,CAEA,SAASQ,GAAmB,CAC1BrB,SAASC,aAAa,CAAC,IAAI1C,MAAMK,EAAemD,YAAY,CAAClD,KAAK,EACpE,CAEA,SAASkE,GAAiB,CACxB/B,SAASC,aAAa,CAAC,IAAI1C,MAAMK,EAAemD,YAAY,CAAC3C,GAAG,EAClE,CAEA,SAASsD,EAAgB,CAACS,sBAAAA,CAAqB,CAAEC,kBAAAA,EAAoB,EAAE,CAAiB,CAAG,CAAC,CAAC,CAAE,CAC7F,OACEhB,KACCgB,CAAAA,IAAAA,EAAkB9G,MAAM,EAAU8G,EAAkBrF,QAAQ,CAAC6C,IAAqB,GAClF,EAACuC,GAAyB,CAAC5B,GAAuB,CAEvD,CC1GO,IAAM8B,EAAgB,gBAChBC,EAAyB,yBACzBC,EAAoB,oBACpBC,EAAgB,kBAChBC,EAA0B,0BAEhC,SAASvB,GAAe,CAC7BhG,CAAAA,EAAAA,EAAAA,EAAAA,EAAQsH,EAAe,KACvBrH,CAAAA,EAAAA,EAAAA,EAAAA,EAAWoH,GACXpH,CAAAA,EAAAA,EAAAA,EAAAA,EAAWkH,GACXlH,CAAAA,EAAAA,EAAAA,EAAAA,EAAWmH,GACXnH,CAAAA,EAAAA,EAAAA,EAAAA,EAAWsH,EACb,CAEO,SAASnB,EAAoB7D,CAA2B,CAAE,CAC/DvC,CAAAA,EAAAA,EAAAA,EAAAA,EAAQsH,EAAe/E,EACzB,CAEO,SAASuE,GAAe,CAC7B9G,CAAAA,EAAAA,EAAAA,EAAAA,EAAQsH,EAAe,IACzB,CAEO,SAASpB,GAAY,CAC1B,IAAMsB,EAAUzH,CAAAA,EAAAA,EAAAA,EAAAA,EAAQuH,GACxB,OAAOE,GAAWA,MAAAA,CACpB,CAEO,SAAS9C,GAAwC,CACtD,MAAO3E,CAAAA,EAAAA,EAAAA,EAAAA,EAAQuH,EACjB,CAEO,SAASG,GAAoB,CAClC,OAAOC,QAAQd,IACjB,CAEO,SAASA,GAAuB,CACrC,MAAO7G,CAAAA,EAAAA,EAAAA,EAAAA,EAAQoH,EACjB,CAEO,SAASQ,EAAqBhB,CAAc,CAAE,CACnD3G,CAAAA,EAAAA,EAAAA,EAAAA,EAAQmH,EAAeR,GAAUb,GACjC9F,CAAAA,EAAAA,EAAAA,EAAAA,EAAQoH,EAAwBpF,OAAOuC,QAAQ,CAACC,IAAI,CACtD,CAEO,SAAS8B,GAAqB,CACnCtG,CAAAA,EAAAA,EAAAA,EAAAA,EAAQqH,EAAmBrF,OAAOuC,QAAQ,CAACC,IAAI,CACjD,CAEO,SAASH,GAAqB,CACnC,MAAOtE,CAAAA,EAAAA,EAAAA,EAAAA,EAAQsH,IAAsBvC,SAAS8C,QAAQ,CAGjD,SAASvB,GAAyB,CACvC,IAAMwB,EAAUxC,IAEZwC,EACF7H,CAAAA,EAAAA,EAAAA,EAAAA,EAAQuH,EAAyBM,GAEjC5H,CAAAA,EAAAA,EAAAA,EAAAA,EAAWsH,EAEf,CAEO,SAAShC,GAAyB,CACvC,MAAOxF,CAAAA,EAAAA,EAAAA,EAAAA,EAAQwH,EACjB,CAEO,SAASlC,GAAyB,QACvC,SAAa9G,aAAa,CAAC,mBAA2B,KAE/CuG,SAASvG,aAAa,CAAC,cAAcE,aAAa,WAFH,C,0BCvEjD,IAAMqJ,EAA2BtC,OAAOC,MAAM,CAAC,CACpDC,QAAS,4BACT/C,MAAO,0BACPG,QAAS,4BACTE,MAAO,0BACP4C,OAAQ,0BACV,GCDO,SAASmC,GAAQ,CAEtBzJ,EAAAA,EAAeA,EAAEU,iBAAiB0D,EAAeI,OAAO,CAAE,SAAUkF,CAAK,CAAE,CACjD,UAApBA,EAAMzF,SAAS,EACjBtE,CAAAA,EAAAA,EAAAA,CAAAA,EAAS,CAAC,EAAE6G,SAASmD,KAAK,CAAC,CAAC,CAEhC,GAEA3J,EAAAA,EAAeA,EAAEU,iBAAiB8I,EAAyBpC,OAAO,CAAEK,GAEpEzH,EAAAA,EAAeA,EAAEU,iBAAiB8I,EAAyBnF,KAAK,CAAEuF,GAAK,CACrEjC,EAAa,EAAmBhB,MAAM,CAAC1C,SAAS,CAClD,GAEAjE,EAAAA,EAAeA,EAAEU,iBAAiB8I,EAAyBhF,OAAO,CAAE,IAAMyD,KAC1EjI,EAAAA,EAAeA,EAAEU,iBAAiB8I,EAAyB9E,KAAK,CAAE,IAAM0D,KACxEpI,EAAAA,EAAeA,EAAEU,iBAAiB8I,EAAyBlC,MAAM,CAAE,IAAMmB,IAC3E,CCpBO,SAASoB,GAAwB,CACZ,aAAtB,OAAOC,YACP,oBAAOC,eACP,mBAAOA,cAAcC,SAAS,EAAEC,WAEpCzD,SAAS9F,gBAAgB,CAAC0D,EAAemD,YAAY,CAAClD,KAAK,CAAE,IAAM,CACjE,IAAM6F,EAAW,IAAI1J,QAAQC,GAAW,CACtC+F,SAAS9F,gBAAgB,CAAC0D,EAAemD,YAAY,CAAC3C,GAAG,CAAEnE,EAAS,CAAC0J,KAAM,EAAI,EACjF,GACAL,WAAWpJ,gBAAgB,CACzB,WACAkJ,GAAK,CACCA,EAAEQ,YAAY,EAChBR,EAAEK,SAAS,CAAC,CACVI,OAAQ,SACRC,QAAS,KACPC,QAAQC,YAAY,CAACV,WAAWW,YAAY,CAACC,QAAQ,GAAI,GAAIzE,SAAS0E,QAAQ,EACvET,EAEX,EAEJ,EACA,CAACC,KAAM,EAAI,GAEbL,WAAWc,QAAQ,CAAC3E,SAASC,IAAI,CAAE,CACjCqE,QAAS,UACTM,MAAON,QAAQM,KAAK,EAExB,EACF,C,kLC3BO,IAAM7K,EAAkB,oBAAOwG,SAA2BsE,KAAAA,EAAYtE,QAAQ,CAExE5F,EAAgB,oBAAO8C,OAAyBoH,KAAAA,EAAYpH,MAAM,CAElEqH,EAEX,oBAAO9E,SAA2B,CAAC0E,SAAU,GAAIK,OAAQ,GAAIC,OAAQ,GAAIC,KAAM,EAAE,EAAIjF,QAAQ,E,mECLxF,IAAMkF,EAAY,KAA2B,IAApBnL,EAAAA,EAAeA,CAKlCoL,EAAa,CAACD,EAOpB,SAASE,GAAoB,OAClC,EAAIF,GAIG/B,QAAQpJ,EAAAA,EAAAA,CAAAA,aAA8B,CAAC,8BAChD,C,+ECnBA,IAAIsL,EAA+B,EAAE,CAG9B,SAAS5I,EAAU6I,CAAyB,CAAEC,EAAmB,EAAK,CAAQ,CAC5DV,KAAAA,IAAnBS,EAAKE,SAAS,EAAgBF,CAAAA,EAAKE,SAAS,CAAG,IAAIzI,OAAOC,OAAO,EAAC,EACtEsI,EAAKG,QAAQ,CAAGC,IAChBJ,EAAKK,KAAK,CAAGC,IACbN,EAAKjK,OAAO,CAAGA,EAAAA,EAAOA,CACtBgK,EAAMQ,IAAI,CAACP,GAEPC,EACFO,IAEAC,GAEJ,CAEA,IAAIC,EAAwB,IAAI,CAEhC,eAAeD,GAAoB,CACjC,MAAMrL,EAAAA,CAAMA,CACE,IAAI,EAAdsL,GACFA,CAAAA,EAASvI,OAAOwI,mBAAmB,CAACH,EAAU,CAElD,CAEA,SAASA,GAAa,CAEpB,GADAE,EAAS,IAAI,CACT,CAACX,EAAMxJ,MAAM,CACf,MACD,CAED,IAAMqK,EAAMnM,EAAAA,EAAeA,EAAEgB,MAAMf,cAA+B,mCAAmCgB,QACrG,GAAI,CAACkL,EACH,MACD,CAED,IAAMC,EAAUC,EAAWf,GAE3B,IAAK,IAAMgB,KAASF,EAClBG,EAASJ,EAAK,CAAC,WAAW,EAAEG,EAAME,IAAI,CAAC,KAAK,GAAG,CAAC,EAGlDlB,EAAQ,EAAE,CAMZ,SAASe,EAAWI,CAA4B,CAAc,CAC5D,IAAML,EAAsB,EAAE,CACxBM,EAAcD,EAAME,GAAG,CAACC,GAAQjJ,KAAKE,SAAS,CAAC+I,IAErD,KAAOF,EAAY5K,MAAM,CAAG,GAC1BsK,EAAQN,IAAI,CAACe,EAAUH,IAGzB,OAAON,CACT,CAIA,SAASS,EAAUH,CAAqB,CAAY,CAClD,IAAMI,EAAYJ,EAAYK,KAAK,GAC7BT,EAAkB,CAACQ,EAAU,CAC/BE,EAAOF,EAAUhL,MAAM,CAE3B,KAAO4K,EAAY5K,MAAM,CAAG,GAAKkL,GAlEjB,OAkEoC,CAClD,IAAMC,EAAeP,CAAW,CAAC,EAAE,CAAE5K,MAAM,CAE3C,GAAIkL,EAAOC,GArEG,MAqEwB,CACpC,IAAMC,EAAaR,EAAYK,KAAK,GACpCT,EAAMR,IAAI,CAACoB,GACXF,GAAQC,CACV,MACE,KAAK,CAIT,OAAOX,CACT,CAEA,SAASC,EAASJ,CAAW,CAAEgB,CAAY,CAAE,CAC3C,GAAI,CACEC,UAAUC,UAAU,EACtBD,UAAUC,UAAU,CAAClB,EAAKgB,EAE9B,CAAE,KAAM,CAER,CACF,CAEA,SAASxB,GAAsB,CAC7B,MAAO,CAAC,CAAC3L,EAAAA,EAAeA,EAAEgB,MAAMf,cAA+B,4BAA4BgB,OAC7F,CAEO,SAAS4K,GAAmB,CACjC,MAAO,CAAC,CAAC7L,EAAAA,EAAeA,EAAEgB,MAAMf,cAA+B,4BAA4BgB,OAC7F,CAGAjB,EAAAA,EAAeA,EAAEU,iBAAiB,WAAYqL,GAC9C/L,EAAAA,EAAeA,EAAEU,iBAAiB,mBAAoBqL,E","sources":["ui/packages/aria-live/aria-live.ts","ui/packages/document-ready/document-ready.ts","ui/packages/runtime-environment/runtime-environment.ts","ui/packages/safe-storage/safe-storage.ts","ui/packages/safe-storage/session-storage.ts","ui/packages/soft-nav/events.ts","ui/packages/soft-nav/stats.ts","ui/packages/soft-nav/state.ts","ui/packages/soft-nav/utils.ts","ui/packages/soft-nav/external.ts","ui/packages/soft-nav/setup.ts","ui/packages/soft-nav/navigator.ts","ui/packages/ssr-utils/ssr-globals.ts","ui/packages/ssr-utils/ssr.ts","ui/packages/stats/stats.ts"],"sourcesContent":["import {ssrSafeDocument} from '@github-ui/ssr-utils'\n\n// Announce an element's text to the screen reader.\nexport function announceFromElement(el: HTMLElement) {\n  announce(getTextContent(el))\n}\n\n// Announce message update to screen reader.\nexport function announce(message: string) {\n  setContainerContent(message)\n}\n\n// Set aria-live container to message.\nfunction setContainerContent(message: string) {\n  const container = ssrSafeDocument?.querySelector('#js-global-screen-reader-notice')\n\n  if (!container) return\n  if (container.textContent === message) {\n    /* This is a hack due to the way the aria live API works.\n    A screen reader will not read a live region again\n    if the text is the same. Adding a space character tells\n    the browser that the live region has updated,\n    which will cause it to read again, but with no audible difference. */\n    container.textContent = `${message}\\u00A0`\n  } else {\n    container.textContent = message\n  }\n}\n\n// Gets the trimmed text content of an element.\nfunction getTextContent(el: HTMLElement): string {\n  // innerText does not contain hidden text\n  /* eslint-disable-next-line github/no-innerText */\n  return (el.getAttribute('aria-label') || el.innerText || '').trim()\n}\n","import {ssrSafeDocument, ssrSafeWindow} from '@github-ui/ssr-utils'\n\n// Check if document has passed interactive state.\n//\n// The document has finished loading and the document has been parsed but\n// sub-resources such as images, stylesheets and frames are still loading.\n// The state indicates that the DOMContentLoaded event has been fired.\nexport const ready: Promise<void> = (function () {\n  if (ssrSafeDocument?.readyState === 'interactive' || ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise<void>(resolve => {\n      ssrSafeDocument?.addEventListener('DOMContentLoaded', () => {\n        resolve()\n      })\n    })\n  }\n})()\n\n// Check if document has passed loaded state.\n//\n// The document and all sub-resources have finished loading. The state\n// indicates that the load event has been fired.\nexport const loaded: Promise<unknown> = (function () {\n  if (ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise(resolve => {\n      ssrSafeWindow?.addEventListener('load', resolve)\n    })\n  }\n})()\n","import memoize from '@github/memoize'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\n\nconst runtimeEnvironment = memoize(githubEnvironment)\n\n// return the github instance environment\n// if dotcom, returns 'dotcom'\n// if enterprise, returns 'enterprise' (ghes and ghae both)\nfunction githubEnvironment(): string {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"runtime-environment\"]')?.content || ''\n}\n\nexport const isPrivateInstance = memoize(isGitHubPrivateInstance)\nfunction isGitHubPrivateInstance(): boolean {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"is-private-instance\"]')?.content === 'true'\n}\n\nexport const isEnterprise = memoize(isEnterpriseEnvironment)\nfunction isEnterpriseEnvironment(): boolean {\n  return runtimeEnvironment() === 'enterprise'\n}\n\n// This is the \"bundler\" that built the client-side assets, e.g. \"webpack\"\nexport const bundler = typeof BUNDLER !== 'undefined' ? BUNDLER : undefined\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\ntype StorageBackend = 'sessionStorage' | 'localStorage'\n\n/**\n * An implementation of the Storage API that throws away all data.  Used in\n * cases when the requested Storage backend is not available.\n */\nclass NoOpStorage {\n  getItem() {\n    return null\n  }\n\n  setItem() {\n    return undefined\n  }\n\n  removeItem() {\n    return undefined\n  }\n\n  clear() {\n    return undefined\n  }\n\n  key() {\n    return null\n  }\n\n  get length() {\n    return 0\n  }\n}\n\ntype SafeStorageOptions = {\n  /** Callers may opt not to suppress quota errors thrown on set in case they rely on recieving them. */\n  throwQuotaErrorsOnSet: boolean\n  /** The amount of time the value should remain in storage, in milliseconds */\n  ttl?: number\n  /** Don't send stats in CI */\n  sendCacheStats?: boolean\n}\n\n/**\n * Safely access Storage items by wrapping a Storage instance\n * (localStorage or sessionStorage) with safe versions of its API\n * methods.  Callers may opt not to suppress quota errors thrown on\n * set in case they rely on recieving them.\n */\nexport default function safeStorage<T = string>(\n  storageKey: StorageBackend,\n  options: SafeStorageOptions = {throwQuotaErrorsOnSet: false},\n  global = ssrSafeWindow,\n  deserialize: (value: string) => T = value => value as unknown as T,\n  serialize: (value: T) => string = (value: T) => value as unknown as string,\n) {\n  let storage: Storage\n  try {\n    if (!global) {\n      // in an SSR environment, use noop storage\n      throw new Error()\n    }\n\n    storage = global[storageKey] || new NoOpStorage()\n  } catch {\n    storage = new NoOpStorage()\n  }\n\n  const {throwQuotaErrorsOnSet} = options\n\n  function emitStats(key: PlatformBrowserIncrementKey) {\n    if (options.sendCacheStats) {\n      sendStats({incrementKey: key})\n    }\n  }\n\n  /**  Safely get storage item. Returns `null` if the item is older than the provided ttl */\n  function getItem(key: string, now: number = new Date().getTime()): T | null {\n    try {\n      const value = storage.getItem(key)\n      if (!value) {\n        return null\n      }\n      const expiryKey = `${key}:expiry`\n      const expiry = Number(storage.getItem(expiryKey))\n      if (expiry && now > expiry) {\n        removeItem(key)\n        removeItem(expiryKey)\n        emitStats('SAFE_STORAGE_VALUE_EXPIRED')\n        return null\n      } else {\n        emitStats('SAFE_STORAGE_VALUE_WITHIN_TTL')\n        return deserialize(value)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n      return null\n    }\n  }\n\n  /**\n   * Safely set storage item.\n   * If `ttl` is provided, set an expiry time for the item under the key `${key}:expiry`\n   * This function will be called\n   */\n  function setItem(key: string, value: T, now: number = new Date().getTime()) {\n    try {\n      storage.setItem(key, serialize(value) as unknown as string)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        const expiry = now + options.ttl\n        storage.setItem(expiryKey, expiry.toString())\n      }\n    } catch (error) {\n      if (throwQuotaErrorsOnSet && error instanceof Error && error.message.toLowerCase().includes('quota')) throw error\n    }\n  }\n\n  // Safely remove storage item.\n  function removeItem(key: string) {\n    try {\n      storage.removeItem(key)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        storage.removeItem(expiryKey)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n    }\n  }\n\n  return {\n    getItem,\n    setItem,\n    removeItem,\n    clear: storage.clear,\n    key: storage.key,\n    get length() {\n      return storage.length\n    },\n  }\n}\n\nexport function jsonSafeStorage<T>(storageBackend: StorageBackend) {\n  return safeStorage<T>(\n    storageBackend,\n    {throwQuotaErrorsOnSet: false},\n    window,\n    JSON.parse as (value: string) => T,\n    JSON.stringify as (obj: T) => string,\n  )\n}\n","import safeStorage from './safe-storage'\n\nexport const {getItem, setItem, removeItem} = safeStorage('sessionStorage')\n","import {SOFT_NAV_STATE} from './state'\n\nexport type SoftNavMechanism = 'turbo' | 'react' | 'turbo.frame'\n\nclass SoftNavEvent extends Event {\n  mechanism: SoftNavMechanism\n\n  constructor(mechanism: SoftNavMechanism, type: string) {\n    super(type)\n    this.mechanism = mechanism\n  }\n}\n\nexport class SoftNavStartEvent extends SoftNavEvent {\n  constructor(mechanism: SoftNavMechanism) {\n    super(mechanism, SOFT_NAV_STATE.START)\n  }\n}\n\nexport class SoftNavSuccessEvent extends SoftNavEvent {\n  visitCount: number\n\n  constructor(mechanism: SoftNavMechanism, visitCount: number) {\n    super(mechanism, SOFT_NAV_STATE.SUCCESS)\n    this.visitCount = visitCount\n  }\n}\n\nexport class SoftNavErrorEvent extends SoftNavEvent {\n  error: string\n\n  constructor(mechanism: SoftNavMechanism, error: string) {\n    super(mechanism, SOFT_NAV_STATE.ERROR)\n    this.error = error\n  }\n}\n\nexport class SoftNavEndEvent extends SoftNavEvent {\n  constructor(mechanism: SoftNavMechanism) {\n    super(mechanism, SOFT_NAV_STATE.END)\n  }\n}\n","import {sendStats} from '@github-ui/stats'\nimport {getCurrentReactAppName, getSoftNavMechanism, getSoftNavReactAppName, getSoftNavReferrer} from './utils'\nimport {SoftNavMechanism} from './events'\n\nexport const SOFT_NAV_DURATION_MARK = 'stats:soft-nav-duration'\nexport const MECHANISM_MAPPING: Record<SoftNavMechanism | 'ui' | 'hard', PlatformBrowserSoftNavigationMechanism> = {\n  turbo: 'TURBO',\n  react: 'REACT',\n  'turbo.frame': 'FRAME',\n  ui: 'UI',\n  hard: 'HARD',\n}\nexport function markStart() {\n  performance.mark(SOFT_NAV_DURATION_MARK)\n}\n\nfunction getDurationSinceLastSoftNav() {\n  if (performance.getEntriesByName(SOFT_NAV_DURATION_MARK).length === 0) {\n    return null\n  }\n\n  performance.measure(SOFT_NAV_DURATION_MARK, SOFT_NAV_DURATION_MARK)\n  const measures = performance.getEntriesByName(SOFT_NAV_DURATION_MARK)\n  const measure = measures.pop()\n  return measure ? measure.duration : null\n}\n\nexport function sendFailureStats(turboFailureReason: string) {\n  sendStats({\n    turboFailureReason,\n    turboStartUrl: getSoftNavReferrer(),\n    turboEndUrl: window.location.href,\n  })\n}\n\nexport function sendRenderStats() {\n  const duration = getDurationSinceLastSoftNav()\n\n  if (!duration) return\n\n  const mechanism = MECHANISM_MAPPING[getSoftNavMechanism()]\n  const roundedDuration = Math.round(duration)\n\n  if (mechanism === MECHANISM_MAPPING.react)\n    document.dispatchEvent(new CustomEvent('staffbar-update', {detail: {duration: roundedDuration}}))\n\n  sendStats({\n    requestUrl: window.location.href,\n    softNavigationTiming: {\n      mechanism,\n      destination: getCurrentReactAppName() || 'rails',\n      duration: roundedDuration,\n      initiator: getSoftNavReactAppName() || 'rails',\n    },\n  })\n}\n","import {SoftNavEndEvent, SoftNavErrorEvent, SoftNavMechanism, SoftNavStartEvent, SoftNavSuccessEvent} from './events'\nimport {markStart, sendFailureStats, sendRenderStats} from './stats'\nimport {\n  clearSoftNav,\n  getSoftNavFailReason,\n  getSoftNavMechanism,\n  setSoftNavMechanism,\n  unsetSoftNav,\n  setSoftNavReferrer,\n  setSoftNavReactAppName,\n  inSoftNav,\n  getCurrentReactAppName,\n} from './utils'\n\nexport const SOFT_NAV_STATE = Object.freeze({\n  INITIAL: 'soft-nav:initial',\n  START: 'soft-nav:start',\n  SUCCESS: 'soft-nav:success',\n  ERROR: 'soft-nav:error',\n  FRAME_UPDATE: 'soft-nav:frame-update',\n  END: 'soft-nav:end',\n  RENDER: 'soft-nav:render',\n  PROGRESS_BAR: {\n    START: 'soft-nav:progress-bar:start',\n    END: 'soft-nav:progress-bar:end',\n  },\n})\n\ninterface SoftNavOptions {\n  skipIfGoingToReactApp?: boolean\n  allowedMechanisms?: SoftNavMechanism[]\n}\n\nexport const DEFAULT_SOFT_NAV_ERROR_REASON = 'reload'\nlet visitCount = 0\n\nexport function initSoftNav() {\n  visitCount = 0\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.INITIAL))\n\n  clearSoftNav()\n}\n\nexport function startSoftNav(mechanism: SoftNavMechanism) {\n  if (inSoftNav()) return\n\n  startProgressBar()\n  document.dispatchEvent(new SoftNavStartEvent(mechanism))\n\n  setSoftNavMechanism(mechanism)\n  setSoftNavReactAppName()\n  setSoftNavReferrer()\n  markStart()\n}\n\nexport function succeedSoftNav(options: SoftNavOptions = {}) {\n  if (!canTriggerEvent(options)) return\n\n  visitCount += 1\n\n  document.dispatchEvent(new SoftNavSuccessEvent(getSoftNavMechanism(), visitCount))\n  endSoftNav(options)\n}\n\nexport function failSoftNav(options: SoftNavOptions = {}) {\n  if (!canTriggerEvent(options)) return\n\n  visitCount = 0\n  const reason = getSoftNavFailReason() || DEFAULT_SOFT_NAV_ERROR_REASON\n  document.dispatchEvent(new SoftNavErrorEvent(getSoftNavMechanism(), reason))\n\n  endProgressBar()\n  sendFailureStats(reason)\n  clearSoftNav()\n}\n\nexport function endSoftNav(options: SoftNavOptions = {}) {\n  if (!canTriggerEvent(options)) return\n\n  endProgressBar()\n  document.dispatchEvent(new SoftNavEndEvent(getSoftNavMechanism()))\n\n  unsetSoftNav()\n}\n\nexport function renderedSoftNav(options: SoftNavOptions = {}) {\n  if (!canTriggerEvent(options)) return\n\n  sendRenderStats()\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.RENDER))\n}\n\nexport function updateFrame() {\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.FRAME_UPDATE))\n}\n\nfunction startProgressBar() {\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.PROGRESS_BAR.START))\n}\n\nfunction endProgressBar() {\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.PROGRESS_BAR.END))\n}\n\nfunction canTriggerEvent({skipIfGoingToReactApp, allowedMechanisms = []}: SoftNavOptions = {}) {\n  return (\n    inSoftNav() &&\n    (allowedMechanisms.length === 0 || allowedMechanisms.includes(getSoftNavMechanism())) &&\n    (!skipIfGoingToReactApp || !getCurrentReactAppName())\n  )\n}\n","import {getItem, removeItem, setItem} from '@github-ui/safe-storage/session-storage'\nimport {SoftNavMechanism} from './events'\nimport {DEFAULT_SOFT_NAV_ERROR_REASON} from './state'\n\nexport const SOFT_NAV_FAIL = 'soft-nav:fail'\nexport const SOFT_NAV_FAIL_REFERRER = 'soft-nav:fail-referrer'\nexport const SOFT_NAV_REFERRER = 'soft-nav:referrer'\nexport const SOFT_NAV_MARK = 'soft-nav:marker'\nexport const SOFT_NAV_REACT_APP_NAME = 'soft-nav:react-app-name'\n\nexport function clearSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n  removeItem(SOFT_NAV_REFERRER)\n  removeItem(SOFT_NAV_FAIL)\n  removeItem(SOFT_NAV_FAIL_REFERRER)\n  removeItem(SOFT_NAV_REACT_APP_NAME)\n}\n\nexport function setSoftNavMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_MARK, mechanism)\n}\n\nexport function unsetSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n}\n\nexport function inSoftNav() {\n  const softNav = getItem(SOFT_NAV_MARK)\n  return softNav && softNav !== '0'\n}\n\nexport function getSoftNavMechanism(): SoftNavMechanism {\n  return getItem(SOFT_NAV_MARK) as SoftNavMechanism\n}\n\nexport function hasSoftNavFailure() {\n  return Boolean(getSoftNavFailReason())\n}\n\nexport function getSoftNavFailReason() {\n  return getItem(SOFT_NAV_FAIL)\n}\n\nexport function setSoftNavFailReason(reason: string) {\n  setItem(SOFT_NAV_FAIL, reason || DEFAULT_SOFT_NAV_ERROR_REASON)\n  setItem(SOFT_NAV_FAIL_REFERRER, window.location.href)\n}\n\nexport function setSoftNavReferrer() {\n  setItem(SOFT_NAV_REFERRER, window.location.href)\n}\n\nexport function getSoftNavReferrer() {\n  return getItem(SOFT_NAV_REFERRER) || document.referrer\n}\n\nexport function setSoftNavReactAppName() {\n  const appName = getCurrentReactAppName()\n\n  if (appName) {\n    setItem(SOFT_NAV_REACT_APP_NAME, appName)\n  } else {\n    removeItem(SOFT_NAV_REACT_APP_NAME)\n  }\n}\n\nexport function getSoftNavReactAppName() {\n  return getItem(SOFT_NAV_REACT_APP_NAME)\n}\n\nexport function getCurrentReactAppName() {\n  if (document.querySelector('meta[name=\"ui\"]')) return 'ui'\n\n  return document.querySelector('react-app')?.getAttribute('app-name')\n}\n","export const SOFT_NAV_EXTERNAL_EVENTS = Object.freeze({\n  INITIAL: 'soft-nav:external:initial',\n  START: 'soft-nav:external:start',\n  SUCCESS: 'soft-nav:external:success',\n  ERROR: 'soft-nav:external:error',\n  RENDER: 'soft-nav:external:render',\n})\n","import {announce} from '@github-ui/aria-live'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {SOFT_NAV_EXTERNAL_EVENTS} from './external'\nimport {SOFT_NAV_STATE, failSoftNav, initSoftNav, renderedSoftNav, startSoftNav, succeedSoftNav} from './state'\n\nexport function setup() {\n  /** Ensure that when a turbo drive navigation happens, the page title is announced */\n  ssrSafeDocument?.addEventListener(SOFT_NAV_STATE.SUCCESS, function (event) {\n    if (event.mechanism === 'turbo') {\n      announce(`${document.title}`)\n    }\n  })\n\n  ssrSafeDocument?.addEventListener(SOFT_NAV_EXTERNAL_EVENTS.INITIAL, initSoftNav)\n\n  ssrSafeDocument?.addEventListener(SOFT_NAV_EXTERNAL_EVENTS.START, e => {\n    startSoftNav((e as CustomEvent).detail.mechanism)\n  })\n\n  ssrSafeDocument?.addEventListener(SOFT_NAV_EXTERNAL_EVENTS.SUCCESS, () => succeedSoftNav())\n  ssrSafeDocument?.addEventListener(SOFT_NAV_EXTERNAL_EVENTS.ERROR, () => failSoftNav())\n  ssrSafeDocument?.addEventListener(SOFT_NAV_EXTERNAL_EVENTS.RENDER, () => renderedSoftNav())\n}\n","import {SOFT_NAV_STATE} from './state'\n\nexport function interceptNavigationUI() {\n  if (typeof navigation === 'undefined') return\n  if (typeof NavigateEvent === 'undefined') return\n  if (typeof NavigateEvent.prototype?.intercept !== 'function') return\n\n  document.addEventListener(SOFT_NAV_STATE.PROGRESS_BAR.START, () => {\n    const finished = new Promise(resolve => {\n      document.addEventListener(SOFT_NAV_STATE.PROGRESS_BAR.END, resolve, {once: true})\n    })\n    navigation.addEventListener(\n      'navigate',\n      e => {\n        if (e.canIntercept) {\n          e.intercept({\n            scroll: 'manual',\n            handler: () => {\n              history.replaceState(navigation.currentEntry.getState(), '', location.pathname)\n              return finished\n            },\n          })\n        }\n      },\n      {once: true},\n    )\n    navigation.navigate(location.href, {\n      history: 'replace',\n      state: history.state,\n    })\n  })\n}\n","// When using SSR, browser globals are not available. If you try to use them, Node.js will throw an error\ntype SSRSafeLocation = Pick<Location, 'pathname' | 'origin' | 'search' | 'hash'>\n\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeDocument = typeof document === 'undefined' ? undefined : document\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeWindow = typeof window === 'undefined' ? undefined : window\n\nexport const ssrSafeLocation: SSRSafeLocation =\n  // eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\n  typeof location === 'undefined' ? {pathname: '', origin: '', search: '', hash: ''} : location\n\nexport function setLocation(url: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  const parsedURL: SSRSafeLocation = new URL(url)\n  const {pathname, origin, search, hash} = parsedURL\n\n  Object.assign(ssrSafeLocation, {pathname, origin, search, hash})\n}\n","import {ssrSafeDocument} from './ssr-globals'\n\n/***\n * Are we rendering on the server?\n */\nexport const IS_SERVER = typeof ssrSafeDocument === 'undefined'\n\n/***\n * Are we rendering on the client?\n */\nexport const IS_BROWSER = !IS_SERVER\n\n/***\n * This helper returns `true` if:\n * - we are rendering on the server\n * - we are on the client, and the app has been hydrated from a server-render\n */\nexport function wasServerRendered() {\n  if (IS_SERVER) {\n    return true\n  }\n\n  return Boolean(ssrSafeDocument!.querySelector('react-app[data-ssr=\"true\"]'))\n}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {loaded} from '@github-ui/document-ready'\nimport {bundler} from '@github-ui/runtime-environment'\n\nlet stats: PlatformBrowserStat[] = []\nconst chunkSize = 64 * 1024\n\nexport function sendStats(stat: PlatformBrowserStat, flushImmediately = false): void {\n  if (stat.timestamp === undefined) stat.timestamp = new Date().getTime()\n  stat.loggedIn = isLoggedIn()\n  stat.staff = isStaff()\n  stat.bundler = bundler\n  stats.push(stat)\n\n  if (flushImmediately) {\n    flushStats()\n  } else {\n    scheduleSendStats()\n  }\n}\n\nlet queued: number | null = null\n\nasync function scheduleSendStats() {\n  await loaded\n  if (queued == null) {\n    queued = window.requestIdleCallback(flushStats)\n  }\n}\n\nfunction flushStats() {\n  queued = null\n  if (!stats.length) {\n    return\n  }\n\n  const url = ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-stats-url\"]')?.content\n  if (!url) {\n    return\n  }\n\n  const batches = getBatches(stats)\n\n  for (const batch of batches) {\n    safeSend(url, `{\"stats\": [${batch.join(',')}] }`)\n  }\n\n  stats = []\n}\n\n// getBatches breaks up the list of stats into smaller batches\n// that are less than 64kb in size. This is to avoid hitting the\n// size limit of the beacon API.\nfunction getBatches(items: PlatformBrowserStat[]): string[][] {\n  const batches: string[][] = []\n  const itemStrings = items.map(item => JSON.stringify(item))\n\n  while (itemStrings.length > 0) {\n    batches.push(makeBatch(itemStrings))\n  }\n\n  return batches\n}\n\n// makeBatch walks the items and collects batches of items that are within\n// the 64kb limit. If an item is too big to fit in a batch, it is sent alone.\nfunction makeBatch(itemStrings: string[]): string[] {\n  const firstItem = itemStrings.shift()!\n  const batch: string[] = [firstItem]\n  let size = firstItem.length\n\n  while (itemStrings.length > 0 && size <= chunkSize) {\n    const nextItemSize = itemStrings[0]!.length\n\n    if (size + nextItemSize <= chunkSize) {\n      const itemString = itemStrings.shift()!\n      batch.push(itemString)\n      size += nextItemSize\n    } else {\n      break\n    }\n  }\n\n  return batch\n}\n\nfunction safeSend(url: string, data: string) {\n  try {\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon(url, data)\n    }\n  } catch {\n    // Silently ignore errors: https://github.com/github/github/issues/178088#issuecomment-829936461\n  }\n}\n\nfunction isLoggedIn(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n}\n\nexport function isStaff(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-staff\"]')?.content\n}\n\n// Flush stats before users navigate away from the page\nssrSafeDocument?.addEventListener('pagehide', flushStats)\nssrSafeDocument?.addEventListener('visibilitychange', flushStats)\n"],"names":["announceFromElement","el","announce","getTextContent","message","setContainerContent","container","ssrSafeDocument","querySelector","textContent","getAttribute","innerText","trim","ready","readyState","Promise","resolve","addEventListener","loaded","ssrSafeWindow","runtimeEnvironment","memoize","githubEnvironment","head","content","isPrivateInstance","isGitHubPrivateInstance","isEnterprise","isEnterpriseEnvironment","bundler","BUNDLER","NoOpStorage","getItem","setItem","removeItem","clear","key","length","safeStorage","storageKey","options","throwQuotaErrorsOnSet","global","deserialize","value","serialize","storage","emitStats","sendCacheStats","sendStats","incrementKey","ttl","expiryKey","error","now","Date","getTime","expiry","Number","toString","Error","toLowerCase","includes","jsonSafeStorage","storageBackend","window","JSON","parse","stringify","SoftNavEvent","Event","constructor","mechanism","type","SoftNavStartEvent","SOFT_NAV_STATE","START","SoftNavSuccessEvent","visitCount","SUCCESS","SoftNavErrorEvent","ERROR","SoftNavEndEvent","END","SOFT_NAV_DURATION_MARK","MECHANISM_MAPPING","turbo","react","ui","hard","markStart","performance","mark","getDurationSinceLastSoftNav","getEntriesByName","measure","measures","pop","duration","sendFailureStats","turboFailureReason","turboStartUrl","getSoftNavReferrer","turboEndUrl","location","href","sendRenderStats","getSoftNavMechanism","roundedDuration","Math","round","document","dispatchEvent","CustomEvent","detail","requestUrl","softNavigationTiming","destination","getCurrentReactAppName","initiator","getSoftNavReactAppName","Object","freeze","INITIAL","FRAME_UPDATE","RENDER","PROGRESS_BAR","DEFAULT_SOFT_NAV_ERROR_REASON","initSoftNav","clearSoftNav","startSoftNav","inSoftNav","startProgressBar","setSoftNavMechanism","setSoftNavReactAppName","setSoftNavReferrer","succeedSoftNav","canTriggerEvent","endSoftNav","failSoftNav","reason","getSoftNavFailReason","endProgressBar","unsetSoftNav","renderedSoftNav","updateFrame","skipIfGoingToReactApp","allowedMechanisms","SOFT_NAV_FAIL","SOFT_NAV_FAIL_REFERRER","SOFT_NAV_REFERRER","SOFT_NAV_MARK","SOFT_NAV_REACT_APP_NAME","softNav","hasSoftNavFailure","Boolean","setSoftNavFailReason","referrer","appName","SOFT_NAV_EXTERNAL_EVENTS","setup","event","title","e","interceptNavigationUI","navigation","NavigateEvent","prototype","intercept","finished","once","canIntercept","scroll","handler","history","replaceState","currentEntry","getState","pathname","navigate","state","undefined","ssrSafeLocation","origin","search","hash","IS_SERVER","IS_BROWSER","wasServerRendered","stats","stat","flushImmediately","timestamp","loggedIn","isLoggedIn","staff","isStaff","push","flushStats","scheduleSendStats","queued","requestIdleCallback","url","batches","getBatches","batch","safeSend","join","items","itemStrings","map","item","makeBatch","firstItem","shift","size","nextItemSize","itemString","data","navigator","sendBeacon"],"sourceRoot":""}